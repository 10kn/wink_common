// 参考
// https://zenn.dev/hsaki/books/golang-grpc-starting/viewer/proto
// https://dev.classmethod.jp/articles/golang-grpc-sample-project/
//

// protoのバージョンです。

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: payment/v1/payment.proto

// メッセージ型などの名前の衝突を避けるためにパッケージ名を指定します。

package paymentv1

import (
	v1 "github.com/10kn/wink_common/server/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enum
type ConsumablePlan int32

const (
	ConsumablePlan_EVENT_PLAN_UNKNOWN_COIN ConsumablePlan = 0
	ConsumablePlan_EVENT_PLAN_10_COIN      ConsumablePlan = 1
	ConsumablePlan_EVENT_PLAN_30_COIN      ConsumablePlan = 2
	ConsumablePlan_EVENT_PLAN_100_COIN     ConsumablePlan = 3
	ConsumablePlan_EVENT_PLAN_300_COIN     ConsumablePlan = 4
)

// Enum value maps for ConsumablePlan.
var (
	ConsumablePlan_name = map[int32]string{
		0: "EVENT_PLAN_UNKNOWN_COIN",
		1: "EVENT_PLAN_10_COIN",
		2: "EVENT_PLAN_30_COIN",
		3: "EVENT_PLAN_100_COIN",
		4: "EVENT_PLAN_300_COIN",
	}
	ConsumablePlan_value = map[string]int32{
		"EVENT_PLAN_UNKNOWN_COIN": 0,
		"EVENT_PLAN_10_COIN":      1,
		"EVENT_PLAN_30_COIN":      2,
		"EVENT_PLAN_100_COIN":     3,
		"EVENT_PLAN_300_COIN":     4,
	}
)

func (x ConsumablePlan) Enum() *ConsumablePlan {
	p := new(ConsumablePlan)
	*p = x
	return p
}

func (x ConsumablePlan) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsumablePlan) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_v1_payment_proto_enumTypes[0].Descriptor()
}

func (ConsumablePlan) Type() protoreflect.EnumType {
	return &file_payment_v1_payment_proto_enumTypes[0]
}

func (x ConsumablePlan) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsumablePlan.Descriptor instead.
func (ConsumablePlan) EnumDescriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{0}
}

// enum
type SubscriptionPlan int32

const (
	SubscriptionPlan_EVENT_PLAN_UNKNOWN_MONTH SubscriptionPlan = 0
	SubscriptionPlan_EVENT_PLAN_1_MONTH       SubscriptionPlan = 1
	SubscriptionPlan_EVENT_PLAN_3_MONTH       SubscriptionPlan = 2
	SubscriptionPlan_EVENT_PLAN_6_MONTH       SubscriptionPlan = 3
	SubscriptionPlan_EVENT_PLAN_12_MONTH      SubscriptionPlan = 4
)

// Enum value maps for SubscriptionPlan.
var (
	SubscriptionPlan_name = map[int32]string{
		0: "EVENT_PLAN_UNKNOWN_MONTH",
		1: "EVENT_PLAN_1_MONTH",
		2: "EVENT_PLAN_3_MONTH",
		3: "EVENT_PLAN_6_MONTH",
		4: "EVENT_PLAN_12_MONTH",
	}
	SubscriptionPlan_value = map[string]int32{
		"EVENT_PLAN_UNKNOWN_MONTH": 0,
		"EVENT_PLAN_1_MONTH":       1,
		"EVENT_PLAN_3_MONTH":       2,
		"EVENT_PLAN_6_MONTH":       3,
		"EVENT_PLAN_12_MONTH":      4,
	}
)

func (x SubscriptionPlan) Enum() *SubscriptionPlan {
	p := new(SubscriptionPlan)
	*p = x
	return p
}

func (x SubscriptionPlan) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionPlan) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_v1_payment_proto_enumTypes[1].Descriptor()
}

func (SubscriptionPlan) Type() protoreflect.EnumType {
	return &file_payment_v1_payment_proto_enumTypes[1]
}

func (x SubscriptionPlan) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionPlan.Descriptor instead.
func (SubscriptionPlan) EnumDescriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{1}
}

// enum
type OneDayPlanEnum int32

const (
	OneDayPlanEnum_ONE_DAY_PLAN_UNKNOWN OneDayPlanEnum = 0
	OneDayPlanEnum_ONE_DAY_PLAN_7_PLAN  OneDayPlanEnum = 1
)

// Enum value maps for OneDayPlanEnum.
var (
	OneDayPlanEnum_name = map[int32]string{
		0: "ONE_DAY_PLAN_UNKNOWN",
		1: "ONE_DAY_PLAN_7_PLAN",
	}
	OneDayPlanEnum_value = map[string]int32{
		"ONE_DAY_PLAN_UNKNOWN": 0,
		"ONE_DAY_PLAN_7_PLAN":  1,
	}
)

func (x OneDayPlanEnum) Enum() *OneDayPlanEnum {
	p := new(OneDayPlanEnum)
	*p = x
	return p
}

func (x OneDayPlanEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OneDayPlanEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_v1_payment_proto_enumTypes[2].Descriptor()
}

func (OneDayPlanEnum) Type() protoreflect.EnumType {
	return &file_payment_v1_payment_proto_enumTypes[2]
}

func (x OneDayPlanEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OneDayPlanEnum.Descriptor instead.
func (OneDayPlanEnum) EnumDescriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{2}
}

type PaymentMethodType int32

const (
	PaymentMethodType_PAYMENT_METHOD_TYPE_UNKNOWN PaymentMethodType = 0
	PaymentMethodType_CARD                        PaymentMethodType = 1
)

// Enum value maps for PaymentMethodType.
var (
	PaymentMethodType_name = map[int32]string{
		0: "PAYMENT_METHOD_TYPE_UNKNOWN",
		1: "CARD",
	}
	PaymentMethodType_value = map[string]int32{
		"PAYMENT_METHOD_TYPE_UNKNOWN": 0,
		"CARD":                        1,
	}
)

func (x PaymentMethodType) Enum() *PaymentMethodType {
	p := new(PaymentMethodType)
	*p = x
	return p
}

func (x PaymentMethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_v1_payment_proto_enumTypes[3].Descriptor()
}

func (PaymentMethodType) Type() protoreflect.EnumType {
	return &file_payment_v1_payment_proto_enumTypes[3]
}

func (x PaymentMethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethodType.Descriptor instead.
func (PaymentMethodType) EnumDescriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{3}
}

type PaymentIntentStatus int32

const (
	PaymentIntentStatus_PAYMENT_INTENT_STATUS_UNKNOWN PaymentIntentStatus = 0
	PaymentIntentStatus_CANCELED                      PaymentIntentStatus = 1
	PaymentIntentStatus_PROCESSING                    PaymentIntentStatus = 2
	PaymentIntentStatus_REQUIRES_ACTION               PaymentIntentStatus = 3
	PaymentIntentStatus_REQUIRES_CAPTURE              PaymentIntentStatus = 4
	PaymentIntentStatus_REQUIRES_CONFIRMATION         PaymentIntentStatus = 5
	PaymentIntentStatus_REQUIRES_PAYMENT_METHOD       PaymentIntentStatus = 6
	PaymentIntentStatus_SUCCEEDED                     PaymentIntentStatus = 7
)

// Enum value maps for PaymentIntentStatus.
var (
	PaymentIntentStatus_name = map[int32]string{
		0: "PAYMENT_INTENT_STATUS_UNKNOWN",
		1: "CANCELED",
		2: "PROCESSING",
		3: "REQUIRES_ACTION",
		4: "REQUIRES_CAPTURE",
		5: "REQUIRES_CONFIRMATION",
		6: "REQUIRES_PAYMENT_METHOD",
		7: "SUCCEEDED",
	}
	PaymentIntentStatus_value = map[string]int32{
		"PAYMENT_INTENT_STATUS_UNKNOWN": 0,
		"CANCELED":                      1,
		"PROCESSING":                    2,
		"REQUIRES_ACTION":               3,
		"REQUIRES_CAPTURE":              4,
		"REQUIRES_CONFIRMATION":         5,
		"REQUIRES_PAYMENT_METHOD":       6,
		"SUCCEEDED":                     7,
	}
)

func (x PaymentIntentStatus) Enum() *PaymentIntentStatus {
	p := new(PaymentIntentStatus)
	*p = x
	return p
}

func (x PaymentIntentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentIntentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_v1_payment_proto_enumTypes[4].Descriptor()
}

func (PaymentIntentStatus) Type() protoreflect.EnumType {
	return &file_payment_v1_payment_proto_enumTypes[4]
}

func (x PaymentIntentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentIntentStatus.Descriptor instead.
func (PaymentIntentStatus) EnumDescriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{4}
}

type CoinPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumablePlanId ConsumablePlan `protobuf:"varint,1,opt,name=consumablePlanId,proto3,enum=payment.v1.ConsumablePlan" json:"consumablePlanId,omitempty"`
	Name             string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price            uint32         `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *CoinPlan) Reset() {
	*x = CoinPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinPlan) ProtoMessage() {}

func (x *CoinPlan) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinPlan.ProtoReflect.Descriptor instead.
func (*CoinPlan) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{0}
}

func (x *CoinPlan) GetConsumablePlanId() ConsumablePlan {
	if x != nil {
		return x.ConsumablePlanId
	}
	return ConsumablePlan_EVENT_PLAN_UNKNOWN_COIN
}

func (x *CoinPlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CoinPlan) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type MemberPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionPlanId SubscriptionPlan `protobuf:"varint,1,opt,name=subscriptionPlanId,proto3,enum=payment.v1.SubscriptionPlan" json:"subscriptionPlanId,omitempty"`
	Name               string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price              uint32           `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *MemberPlan) Reset() {
	*x = MemberPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPlan) ProtoMessage() {}

func (x *MemberPlan) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberPlan.ProtoReflect.Descriptor instead.
func (*MemberPlan) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{1}
}

func (x *MemberPlan) GetSubscriptionPlanId() SubscriptionPlan {
	if x != nil {
		return x.SubscriptionPlanId
	}
	return SubscriptionPlan_EVENT_PLAN_UNKNOWN_MONTH
}

func (x *MemberPlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberPlan) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetCoinPlansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinPlans []*CoinPlan `protobuf:"bytes,1,rep,name=coinPlans,proto3" json:"coinPlans,omitempty"`
}

func (x *GetCoinPlansResponse) Reset() {
	*x = GetCoinPlansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoinPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoinPlansResponse) ProtoMessage() {}

func (x *GetCoinPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoinPlansResponse.ProtoReflect.Descriptor instead.
func (*GetCoinPlansResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{2}
}

func (x *GetCoinPlansResponse) GetCoinPlans() []*CoinPlan {
	if x != nil {
		return x.CoinPlans
	}
	return nil
}

type OneDayPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OneDayPlanId OneDayPlanEnum `protobuf:"varint,1,opt,name=oneDayPlanId,proto3,enum=payment.v1.OneDayPlanEnum" json:"oneDayPlanId,omitempty"`
	Name         string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price        uint32         `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *OneDayPlan) Reset() {
	*x = OneDayPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneDayPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneDayPlan) ProtoMessage() {}

func (x *OneDayPlan) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneDayPlan.ProtoReflect.Descriptor instead.
func (*OneDayPlan) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{3}
}

func (x *OneDayPlan) GetOneDayPlanId() OneDayPlanEnum {
	if x != nil {
		return x.OneDayPlanId
	}
	return OneDayPlanEnum_ONE_DAY_PLAN_UNKNOWN
}

func (x *OneDayPlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OneDayPlan) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetMemberPlansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberPlans []*MemberPlan `protobuf:"bytes,1,rep,name=memberPlans,proto3" json:"memberPlans,omitempty"`
	OneDayPlans []*OneDayPlan `protobuf:"bytes,2,rep,name=oneDayPlans,proto3" json:"oneDayPlans,omitempty"`
}

func (x *GetMemberPlansResponse) Reset() {
	*x = GetMemberPlansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberPlansResponse) ProtoMessage() {}

func (x *GetMemberPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberPlansResponse.ProtoReflect.Descriptor instead.
func (*GetMemberPlansResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{4}
}

func (x *GetMemberPlansResponse) GetMemberPlans() []*MemberPlan {
	if x != nil {
		return x.MemberPlans
	}
	return nil
}

func (x *GetMemberPlansResponse) GetOneDayPlans() []*OneDayPlan {
	if x != nil {
		return x.OneDayPlans
	}
	return nil
}

type PaymentCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand    string `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Last4    string `protobuf:"bytes,2,opt,name=last4,proto3" json:"last4,omitempty"`
	ExpYear  string `protobuf:"bytes,3,opt,name=expYear,proto3" json:"expYear,omitempty"`
	ExpMonth string `protobuf:"bytes,4,opt,name=expMonth,proto3" json:"expMonth,omitempty"`
}

func (x *PaymentCard) Reset() {
	*x = PaymentCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCard) ProtoMessage() {}

func (x *PaymentCard) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCard.ProtoReflect.Descriptor instead.
func (*PaymentCard) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{5}
}

func (x *PaymentCard) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *PaymentCard) GetLast4() string {
	if x != nil {
		return x.Last4
	}
	return ""
}

func (x *PaymentCard) GetExpYear() string {
	if x != nil {
		return x.ExpYear
	}
	return ""
}

func (x *PaymentCard) GetExpMonth() string {
	if x != nil {
		return x.ExpMonth
	}
	return ""
}

type GetPaymentCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentCard *PaymentCard `protobuf:"bytes,1,opt,name=paymentCard,proto3,oneof" json:"paymentCard,omitempty"`
}

func (x *GetPaymentCardResponse) Reset() {
	*x = GetPaymentCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentCardResponse) ProtoMessage() {}

func (x *GetPaymentCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentCardResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentCardResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{6}
}

func (x *GetPaymentCardResponse) GetPaymentCard() *PaymentCard {
	if x != nil {
		return x.PaymentCard
	}
	return nil
}

type CreateSetupIntentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    *v1.ErrorCode `protobuf:"varint,1,opt,name=errorCode,proto3,enum=common.v1.ErrorCode,oneof" json:"errorCode,omitempty"`
	ClientSecret string        `protobuf:"bytes,2,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
}

func (x *CreateSetupIntentResponse) Reset() {
	*x = CreateSetupIntentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSetupIntentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSetupIntentResponse) ProtoMessage() {}

func (x *CreateSetupIntentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSetupIntentResponse.ProtoReflect.Descriptor instead.
func (*CreateSetupIntentResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{7}
}

func (x *CreateSetupIntentResponse) GetErrorCode() v1.ErrorCode {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return v1.ErrorCode(0)
}

func (x *CreateSetupIntentResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type PaymentIntent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          PaymentIntentStatus `protobuf:"varint,1,opt,name=status,proto3,enum=payment.v1.PaymentIntentStatus" json:"status,omitempty"`
	ClientSecret    string              `protobuf:"bytes,2,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	PaymentMethodId string              `protobuf:"bytes,3,opt,name=paymentMethodId,proto3" json:"paymentMethodId,omitempty"`
}

func (x *PaymentIntent) Reset() {
	*x = PaymentIntent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentIntent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentIntent) ProtoMessage() {}

func (x *PaymentIntent) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentIntent.ProtoReflect.Descriptor instead.
func (*PaymentIntent) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentIntent) GetStatus() PaymentIntentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentIntentStatus_PAYMENT_INTENT_STATUS_UNKNOWN
}

func (x *PaymentIntent) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *PaymentIntent) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

type BuyConsumableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumablePlanId  ConsumablePlan    `protobuf:"varint,1,opt,name=consumablePlanId,proto3,enum=payment.v1.ConsumablePlan" json:"consumablePlanId,omitempty"`
	PaymentMethodType PaymentMethodType `protobuf:"varint,2,opt,name=paymentMethodType,proto3,enum=payment.v1.PaymentMethodType" json:"paymentMethodType,omitempty"`
	PaymentMethodId   string            `protobuf:"bytes,3,opt,name=paymentMethodId,proto3" json:"paymentMethodId,omitempty"`
}

func (x *BuyConsumableRequest) Reset() {
	*x = BuyConsumableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyConsumableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyConsumableRequest) ProtoMessage() {}

func (x *BuyConsumableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyConsumableRequest.ProtoReflect.Descriptor instead.
func (*BuyConsumableRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{9}
}

func (x *BuyConsumableRequest) GetConsumablePlanId() ConsumablePlan {
	if x != nil {
		return x.ConsumablePlanId
	}
	return ConsumablePlan_EVENT_PLAN_UNKNOWN_COIN
}

func (x *BuyConsumableRequest) GetPaymentMethodType() PaymentMethodType {
	if x != nil {
		return x.PaymentMethodType
	}
	return PaymentMethodType_PAYMENT_METHOD_TYPE_UNKNOWN
}

func (x *BuyConsumableRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

type BuyConsumableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode     *v1.ErrorCode  `protobuf:"varint,1,opt,name=errorCode,proto3,enum=common.v1.ErrorCode,oneof" json:"errorCode,omitempty"`
	PaymentIntent *PaymentIntent `protobuf:"bytes,2,opt,name=paymentIntent,proto3" json:"paymentIntent,omitempty"`
}

func (x *BuyConsumableResponse) Reset() {
	*x = BuyConsumableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyConsumableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyConsumableResponse) ProtoMessage() {}

func (x *BuyConsumableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyConsumableResponse.ProtoReflect.Descriptor instead.
func (*BuyConsumableResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{10}
}

func (x *BuyConsumableResponse) GetErrorCode() v1.ErrorCode {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return v1.ErrorCode(0)
}

func (x *BuyConsumableResponse) GetPaymentIntent() *PaymentIntent {
	if x != nil {
		return x.PaymentIntent
	}
	return nil
}

type BuyConsumableWithRegisteredMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumablePlanId ConsumablePlan `protobuf:"varint,1,opt,name=consumablePlanId,proto3,enum=payment.v1.ConsumablePlan" json:"consumablePlanId,omitempty"`
}

func (x *BuyConsumableWithRegisteredMethodRequest) Reset() {
	*x = BuyConsumableWithRegisteredMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyConsumableWithRegisteredMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyConsumableWithRegisteredMethodRequest) ProtoMessage() {}

func (x *BuyConsumableWithRegisteredMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyConsumableWithRegisteredMethodRequest.ProtoReflect.Descriptor instead.
func (*BuyConsumableWithRegisteredMethodRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{11}
}

func (x *BuyConsumableWithRegisteredMethodRequest) GetConsumablePlanId() ConsumablePlan {
	if x != nil {
		return x.ConsumablePlanId
	}
	return ConsumablePlan_EVENT_PLAN_UNKNOWN_COIN
}

type BuyConsumableWithRegisteredMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode     *v1.ErrorCode  `protobuf:"varint,1,opt,name=errorCode,proto3,enum=common.v1.ErrorCode,oneof" json:"errorCode,omitempty"`
	PaymentIntent *PaymentIntent `protobuf:"bytes,2,opt,name=paymentIntent,proto3" json:"paymentIntent,omitempty"`
}

func (x *BuyConsumableWithRegisteredMethodResponse) Reset() {
	*x = BuyConsumableWithRegisteredMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyConsumableWithRegisteredMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyConsumableWithRegisteredMethodResponse) ProtoMessage() {}

func (x *BuyConsumableWithRegisteredMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyConsumableWithRegisteredMethodResponse.ProtoReflect.Descriptor instead.
func (*BuyConsumableWithRegisteredMethodResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{12}
}

func (x *BuyConsumableWithRegisteredMethodResponse) GetErrorCode() v1.ErrorCode {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return v1.ErrorCode(0)
}

func (x *BuyConsumableWithRegisteredMethodResponse) GetPaymentIntent() *PaymentIntent {
	if x != nil {
		return x.PaymentIntent
	}
	return nil
}

type BuySubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionPlanId SubscriptionPlan  `protobuf:"varint,1,opt,name=subscriptionPlanId,proto3,enum=payment.v1.SubscriptionPlan" json:"subscriptionPlanId,omitempty"`
	PaymentMethodType  PaymentMethodType `protobuf:"varint,2,opt,name=paymentMethodType,proto3,enum=payment.v1.PaymentMethodType" json:"paymentMethodType,omitempty"`
	PaymentMethodId    string            `protobuf:"bytes,3,opt,name=paymentMethodId,proto3" json:"paymentMethodId,omitempty"`
}

func (x *BuySubscriptionRequest) Reset() {
	*x = BuySubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuySubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubscriptionRequest) ProtoMessage() {}

func (x *BuySubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubscriptionRequest.ProtoReflect.Descriptor instead.
func (*BuySubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{13}
}

func (x *BuySubscriptionRequest) GetSubscriptionPlanId() SubscriptionPlan {
	if x != nil {
		return x.SubscriptionPlanId
	}
	return SubscriptionPlan_EVENT_PLAN_UNKNOWN_MONTH
}

func (x *BuySubscriptionRequest) GetPaymentMethodType() PaymentMethodType {
	if x != nil {
		return x.PaymentMethodType
	}
	return PaymentMethodType_PAYMENT_METHOD_TYPE_UNKNOWN
}

func (x *BuySubscriptionRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

type BuySubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode     *v1.ErrorCode  `protobuf:"varint,1,opt,name=errorCode,proto3,enum=common.v1.ErrorCode,oneof" json:"errorCode,omitempty"`
	PaymentIntent *PaymentIntent `protobuf:"bytes,2,opt,name=paymentIntent,proto3" json:"paymentIntent,omitempty"`
}

func (x *BuySubscriptionResponse) Reset() {
	*x = BuySubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuySubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubscriptionResponse) ProtoMessage() {}

func (x *BuySubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubscriptionResponse.ProtoReflect.Descriptor instead.
func (*BuySubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{14}
}

func (x *BuySubscriptionResponse) GetErrorCode() v1.ErrorCode {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return v1.ErrorCode(0)
}

func (x *BuySubscriptionResponse) GetPaymentIntent() *PaymentIntent {
	if x != nil {
		return x.PaymentIntent
	}
	return nil
}

type BuySubscriptionWithRegisteredMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionPlanId SubscriptionPlan `protobuf:"varint,1,opt,name=subscriptionPlanId,proto3,enum=payment.v1.SubscriptionPlan" json:"subscriptionPlanId,omitempty"`
}

func (x *BuySubscriptionWithRegisteredMethodRequest) Reset() {
	*x = BuySubscriptionWithRegisteredMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuySubscriptionWithRegisteredMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubscriptionWithRegisteredMethodRequest) ProtoMessage() {}

func (x *BuySubscriptionWithRegisteredMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubscriptionWithRegisteredMethodRequest.ProtoReflect.Descriptor instead.
func (*BuySubscriptionWithRegisteredMethodRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{15}
}

func (x *BuySubscriptionWithRegisteredMethodRequest) GetSubscriptionPlanId() SubscriptionPlan {
	if x != nil {
		return x.SubscriptionPlanId
	}
	return SubscriptionPlan_EVENT_PLAN_UNKNOWN_MONTH
}

type BuySubscriptionWithRegisteredMethodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode     *v1.ErrorCode  `protobuf:"varint,1,opt,name=errorCode,proto3,enum=common.v1.ErrorCode,oneof" json:"errorCode,omitempty"`
	PaymentIntent *PaymentIntent `protobuf:"bytes,2,opt,name=paymentIntent,proto3" json:"paymentIntent,omitempty"`
}

func (x *BuySubscriptionWithRegisteredMethodResponse) Reset() {
	*x = BuySubscriptionWithRegisteredMethodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuySubscriptionWithRegisteredMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubscriptionWithRegisteredMethodResponse) ProtoMessage() {}

func (x *BuySubscriptionWithRegisteredMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubscriptionWithRegisteredMethodResponse.ProtoReflect.Descriptor instead.
func (*BuySubscriptionWithRegisteredMethodResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{16}
}

func (x *BuySubscriptionWithRegisteredMethodResponse) GetErrorCode() v1.ErrorCode {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return v1.ErrorCode(0)
}

func (x *BuySubscriptionWithRegisteredMethodResponse) GetPaymentIntent() *PaymentIntent {
	if x != nil {
		return x.PaymentIntent
	}
	return nil
}

type CancelSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *v1.ErrorCode `protobuf:"varint,1,opt,name=errorCode,proto3,enum=common.v1.ErrorCode,oneof" json:"errorCode,omitempty"`
}

func (x *CancelSubscriptionResponse) Reset() {
	*x = CancelSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscriptionResponse) ProtoMessage() {}

func (x *CancelSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*CancelSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{17}
}

func (x *CancelSubscriptionResponse) GetErrorCode() v1.ErrorCode {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return v1.ErrorCode(0)
}

type UpdatePaymentCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethodType PaymentMethodType `protobuf:"varint,1,opt,name=paymentMethodType,proto3,enum=payment.v1.PaymentMethodType" json:"paymentMethodType,omitempty"`
	PaymentMethodId   string            `protobuf:"bytes,2,opt,name=paymentMethodId,proto3" json:"paymentMethodId,omitempty"`
}

func (x *UpdatePaymentCardRequest) Reset() {
	*x = UpdatePaymentCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentCardRequest) ProtoMessage() {}

func (x *UpdatePaymentCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentCardRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaymentCardRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{18}
}

func (x *UpdatePaymentCardRequest) GetPaymentMethodType() PaymentMethodType {
	if x != nil {
		return x.PaymentMethodType
	}
	return PaymentMethodType_PAYMENT_METHOD_TYPE_UNKNOWN
}

func (x *UpdatePaymentCardRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

type UpdatePaymentCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode *v1.ErrorCode `protobuf:"varint,1,opt,name=errorCode,proto3,enum=common.v1.ErrorCode,oneof" json:"errorCode,omitempty"`
}

func (x *UpdatePaymentCardResponse) Reset() {
	*x = UpdatePaymentCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentCardResponse) ProtoMessage() {}

func (x *UpdatePaymentCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentCardResponse.ProtoReflect.Descriptor instead.
func (*UpdatePaymentCardResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{19}
}

func (x *UpdatePaymentCardResponse) GetErrorCode() v1.ErrorCode {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return v1.ErrorCode(0)
}

type BuyOneDayPlanWithCoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OneDayPlanId OneDayPlanEnum `protobuf:"varint,1,opt,name=oneDayPlanId,proto3,enum=payment.v1.OneDayPlanEnum" json:"oneDayPlanId,omitempty"`
}

func (x *BuyOneDayPlanWithCoinRequest) Reset() {
	*x = BuyOneDayPlanWithCoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOneDayPlanWithCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOneDayPlanWithCoinRequest) ProtoMessage() {}

func (x *BuyOneDayPlanWithCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOneDayPlanWithCoinRequest.ProtoReflect.Descriptor instead.
func (*BuyOneDayPlanWithCoinRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{20}
}

func (x *BuyOneDayPlanWithCoinRequest) GetOneDayPlanId() OneDayPlanEnum {
	if x != nil {
		return x.OneDayPlanId
	}
	return OneDayPlanEnum_ONE_DAY_PLAN_UNKNOWN
}

var File_payment_v1_payment_proto protoreflect.FileDescriptor

var file_payment_v1_payment_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x7c, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x46, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x84, 0x01,
	0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x4c, 0x0a, 0x12,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09,
	0x63, 0x6f, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x73,
	0x22, 0x76, 0x0a, 0x0a, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x3e,
	0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0c, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x38, 0x0a,
	0x0b, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0b, 0x6f, 0x6e, 0x65, 0x44,
	0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x6f, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x73, 0x74, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x73,
	0x74, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x70, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x70, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0x68, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x0d,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x49, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x14, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a,
	0x15, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x3f, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x72,
	0x0a, 0x28, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x10, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x29, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x61, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x16, 0x42, 0x75, 0x79,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x12, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x42, 0x75, 0x79,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x7a, 0x0a, 0x2a,
	0x42, 0x75, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x12, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x2b, 0x42, 0x75, 0x79,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x63, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5e, 0x0a,
	0x1c, 0x42, 0x75, 0x79, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x0c, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x0c, 0x6f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x2a, 0x8f, 0x01,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x1b, 0x0a, 0x17, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x31, 0x30, 0x5f, 0x43,
	0x4f, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50,
	0x4c, 0x41, 0x4e, 0x5f, 0x33, 0x30, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x31, 0x30, 0x30, 0x5f,
	0x43, 0x4f, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x33, 0x30, 0x30, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x10, 0x04, 0x2a,
	0x91, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c,
	0x41, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x4e,
	0x5f, 0x31, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x33, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x4e,
	0x5f, 0x36, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x31, 0x32, 0x5f, 0x4d, 0x4f, 0x4e, 0x54,
	0x48, 0x10, 0x04, 0x2a, 0x43, 0x0a, 0x0e, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x4e, 0x45, 0x5f, 0x44, 0x41, 0x59,
	0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x4f, 0x4e, 0x45, 0x5f, 0x44, 0x41, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f,
	0x37, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x01, 0x2a, 0x3e, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x1b, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x43, 0x41, 0x52, 0x44, 0x10, 0x01, 0x2a, 0xc8, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x21, 0x0a, 0x1d, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x53, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52,
	0x45, 0x53, 0x5f, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15,
	0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x51, 0x55, 0x49,
	0x52, 0x45, 0x53, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48,
	0x4f, 0x44, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45,
	0x44, 0x10, 0x07, 0x32, 0xbb, 0x08, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x0d, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x21, 0x42, 0x75, 0x79, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x34, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x42, 0x75, 0x79,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75,
	0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x23, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x36, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x15, 0x42, 0x75, 0x79, 0x4f, 0x6e, 0x65,
	0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x69, 0x6e, 0x12,
	0x28, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x79,
	0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x31, 0x30, 0x6b, 0x6e, 0x2f, 0x77, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x31, 0x3b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payment_v1_payment_proto_rawDescOnce sync.Once
	file_payment_v1_payment_proto_rawDescData = file_payment_v1_payment_proto_rawDesc
)

func file_payment_v1_payment_proto_rawDescGZIP() []byte {
	file_payment_v1_payment_proto_rawDescOnce.Do(func() {
		file_payment_v1_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_payment_v1_payment_proto_rawDescData)
	})
	return file_payment_v1_payment_proto_rawDescData
}

var file_payment_v1_payment_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_payment_v1_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_payment_v1_payment_proto_goTypes = []interface{}{
	(ConsumablePlan)(0),                                 // 0: payment.v1.ConsumablePlan
	(SubscriptionPlan)(0),                               // 1: payment.v1.SubscriptionPlan
	(OneDayPlanEnum)(0),                                 // 2: payment.v1.OneDayPlanEnum
	(PaymentMethodType)(0),                              // 3: payment.v1.PaymentMethodType
	(PaymentIntentStatus)(0),                            // 4: payment.v1.PaymentIntentStatus
	(*CoinPlan)(nil),                                    // 5: payment.v1.CoinPlan
	(*MemberPlan)(nil),                                  // 6: payment.v1.MemberPlan
	(*GetCoinPlansResponse)(nil),                        // 7: payment.v1.GetCoinPlansResponse
	(*OneDayPlan)(nil),                                  // 8: payment.v1.OneDayPlan
	(*GetMemberPlansResponse)(nil),                      // 9: payment.v1.GetMemberPlansResponse
	(*PaymentCard)(nil),                                 // 10: payment.v1.PaymentCard
	(*GetPaymentCardResponse)(nil),                      // 11: payment.v1.GetPaymentCardResponse
	(*CreateSetupIntentResponse)(nil),                   // 12: payment.v1.CreateSetupIntentResponse
	(*PaymentIntent)(nil),                               // 13: payment.v1.PaymentIntent
	(*BuyConsumableRequest)(nil),                        // 14: payment.v1.BuyConsumableRequest
	(*BuyConsumableResponse)(nil),                       // 15: payment.v1.BuyConsumableResponse
	(*BuyConsumableWithRegisteredMethodRequest)(nil),    // 16: payment.v1.BuyConsumableWithRegisteredMethodRequest
	(*BuyConsumableWithRegisteredMethodResponse)(nil),   // 17: payment.v1.BuyConsumableWithRegisteredMethodResponse
	(*BuySubscriptionRequest)(nil),                      // 18: payment.v1.BuySubscriptionRequest
	(*BuySubscriptionResponse)(nil),                     // 19: payment.v1.BuySubscriptionResponse
	(*BuySubscriptionWithRegisteredMethodRequest)(nil),  // 20: payment.v1.BuySubscriptionWithRegisteredMethodRequest
	(*BuySubscriptionWithRegisteredMethodResponse)(nil), // 21: payment.v1.BuySubscriptionWithRegisteredMethodResponse
	(*CancelSubscriptionResponse)(nil),                  // 22: payment.v1.CancelSubscriptionResponse
	(*UpdatePaymentCardRequest)(nil),                    // 23: payment.v1.UpdatePaymentCardRequest
	(*UpdatePaymentCardResponse)(nil),                   // 24: payment.v1.UpdatePaymentCardResponse
	(*BuyOneDayPlanWithCoinRequest)(nil),                // 25: payment.v1.BuyOneDayPlanWithCoinRequest
	(v1.ErrorCode)(0),                                   // 26: common.v1.ErrorCode
	(*emptypb.Empty)(nil),                               // 27: google.protobuf.Empty
}
var file_payment_v1_payment_proto_depIdxs = []int32{
	0,  // 0: payment.v1.CoinPlan.consumablePlanId:type_name -> payment.v1.ConsumablePlan
	1,  // 1: payment.v1.MemberPlan.subscriptionPlanId:type_name -> payment.v1.SubscriptionPlan
	5,  // 2: payment.v1.GetCoinPlansResponse.coinPlans:type_name -> payment.v1.CoinPlan
	2,  // 3: payment.v1.OneDayPlan.oneDayPlanId:type_name -> payment.v1.OneDayPlanEnum
	6,  // 4: payment.v1.GetMemberPlansResponse.memberPlans:type_name -> payment.v1.MemberPlan
	8,  // 5: payment.v1.GetMemberPlansResponse.oneDayPlans:type_name -> payment.v1.OneDayPlan
	10, // 6: payment.v1.GetPaymentCardResponse.paymentCard:type_name -> payment.v1.PaymentCard
	26, // 7: payment.v1.CreateSetupIntentResponse.errorCode:type_name -> common.v1.ErrorCode
	4,  // 8: payment.v1.PaymentIntent.status:type_name -> payment.v1.PaymentIntentStatus
	0,  // 9: payment.v1.BuyConsumableRequest.consumablePlanId:type_name -> payment.v1.ConsumablePlan
	3,  // 10: payment.v1.BuyConsumableRequest.paymentMethodType:type_name -> payment.v1.PaymentMethodType
	26, // 11: payment.v1.BuyConsumableResponse.errorCode:type_name -> common.v1.ErrorCode
	13, // 12: payment.v1.BuyConsumableResponse.paymentIntent:type_name -> payment.v1.PaymentIntent
	0,  // 13: payment.v1.BuyConsumableWithRegisteredMethodRequest.consumablePlanId:type_name -> payment.v1.ConsumablePlan
	26, // 14: payment.v1.BuyConsumableWithRegisteredMethodResponse.errorCode:type_name -> common.v1.ErrorCode
	13, // 15: payment.v1.BuyConsumableWithRegisteredMethodResponse.paymentIntent:type_name -> payment.v1.PaymentIntent
	1,  // 16: payment.v1.BuySubscriptionRequest.subscriptionPlanId:type_name -> payment.v1.SubscriptionPlan
	3,  // 17: payment.v1.BuySubscriptionRequest.paymentMethodType:type_name -> payment.v1.PaymentMethodType
	26, // 18: payment.v1.BuySubscriptionResponse.errorCode:type_name -> common.v1.ErrorCode
	13, // 19: payment.v1.BuySubscriptionResponse.paymentIntent:type_name -> payment.v1.PaymentIntent
	1,  // 20: payment.v1.BuySubscriptionWithRegisteredMethodRequest.subscriptionPlanId:type_name -> payment.v1.SubscriptionPlan
	26, // 21: payment.v1.BuySubscriptionWithRegisteredMethodResponse.errorCode:type_name -> common.v1.ErrorCode
	13, // 22: payment.v1.BuySubscriptionWithRegisteredMethodResponse.paymentIntent:type_name -> payment.v1.PaymentIntent
	26, // 23: payment.v1.CancelSubscriptionResponse.errorCode:type_name -> common.v1.ErrorCode
	3,  // 24: payment.v1.UpdatePaymentCardRequest.paymentMethodType:type_name -> payment.v1.PaymentMethodType
	26, // 25: payment.v1.UpdatePaymentCardResponse.errorCode:type_name -> common.v1.ErrorCode
	2,  // 26: payment.v1.BuyOneDayPlanWithCoinRequest.oneDayPlanId:type_name -> payment.v1.OneDayPlanEnum
	27, // 27: payment.v1.PaymentService.GetCoinPlans:input_type -> google.protobuf.Empty
	27, // 28: payment.v1.PaymentService.GetMemberPlans:input_type -> google.protobuf.Empty
	27, // 29: payment.v1.PaymentService.GetPaymentCard:input_type -> google.protobuf.Empty
	27, // 30: payment.v1.PaymentService.CreateSetupIntent:input_type -> google.protobuf.Empty
	14, // 31: payment.v1.PaymentService.BuyConsumable:input_type -> payment.v1.BuyConsumableRequest
	16, // 32: payment.v1.PaymentService.BuyConsumableWithRegisteredMethod:input_type -> payment.v1.BuyConsumableWithRegisteredMethodRequest
	18, // 33: payment.v1.PaymentService.BuySubscription:input_type -> payment.v1.BuySubscriptionRequest
	20, // 34: payment.v1.PaymentService.BuySubscriptionWithRegisteredMethod:input_type -> payment.v1.BuySubscriptionWithRegisteredMethodRequest
	27, // 35: payment.v1.PaymentService.CancelSubscription:input_type -> google.protobuf.Empty
	23, // 36: payment.v1.PaymentService.UpdatePaymentCard:input_type -> payment.v1.UpdatePaymentCardRequest
	25, // 37: payment.v1.PaymentService.BuyOneDayPlanWithCoin:input_type -> payment.v1.BuyOneDayPlanWithCoinRequest
	7,  // 38: payment.v1.PaymentService.GetCoinPlans:output_type -> payment.v1.GetCoinPlansResponse
	9,  // 39: payment.v1.PaymentService.GetMemberPlans:output_type -> payment.v1.GetMemberPlansResponse
	11, // 40: payment.v1.PaymentService.GetPaymentCard:output_type -> payment.v1.GetPaymentCardResponse
	12, // 41: payment.v1.PaymentService.CreateSetupIntent:output_type -> payment.v1.CreateSetupIntentResponse
	15, // 42: payment.v1.PaymentService.BuyConsumable:output_type -> payment.v1.BuyConsumableResponse
	17, // 43: payment.v1.PaymentService.BuyConsumableWithRegisteredMethod:output_type -> payment.v1.BuyConsumableWithRegisteredMethodResponse
	19, // 44: payment.v1.PaymentService.BuySubscription:output_type -> payment.v1.BuySubscriptionResponse
	21, // 45: payment.v1.PaymentService.BuySubscriptionWithRegisteredMethod:output_type -> payment.v1.BuySubscriptionWithRegisteredMethodResponse
	22, // 46: payment.v1.PaymentService.CancelSubscription:output_type -> payment.v1.CancelSubscriptionResponse
	24, // 47: payment.v1.PaymentService.UpdatePaymentCard:output_type -> payment.v1.UpdatePaymentCardResponse
	27, // 48: payment.v1.PaymentService.BuyOneDayPlanWithCoin:output_type -> google.protobuf.Empty
	38, // [38:49] is the sub-list for method output_type
	27, // [27:38] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_payment_v1_payment_proto_init() }
func file_payment_v1_payment_proto_init() {
	if File_payment_v1_payment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payment_v1_payment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoinPlansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneDayPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberPlansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSetupIntentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentIntent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyConsumableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyConsumableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyConsumableWithRegisteredMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyConsumableWithRegisteredMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuySubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuySubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuySubscriptionWithRegisteredMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuySubscriptionWithRegisteredMethodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOneDayPlanWithCoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_payment_v1_payment_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_payment_v1_payment_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_payment_v1_payment_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_payment_v1_payment_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_payment_v1_payment_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_payment_v1_payment_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_payment_v1_payment_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_payment_v1_payment_proto_msgTypes[19].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payment_v1_payment_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payment_v1_payment_proto_goTypes,
		DependencyIndexes: file_payment_v1_payment_proto_depIdxs,
		EnumInfos:         file_payment_v1_payment_proto_enumTypes,
		MessageInfos:      file_payment_v1_payment_proto_msgTypes,
	}.Build()
	File_payment_v1_payment_proto = out.File
	file_payment_v1_payment_proto_rawDesc = nil
	file_payment_v1_payment_proto_goTypes = nil
	file_payment_v1_payment_proto_depIdxs = nil
}
