// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: user_profile/v1/user_profile.proto

package userprofilev1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UserProfileServiceClient is the client API for UserProfileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserProfileServiceClient interface {
	GetUserProfile(ctx context.Context, in *GetUserProfileRequest, opts ...grpc.CallOption) (*GetUserProfileResponse, error)
	UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetOwnUserProfile(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetOwnUserProfileResponse, error)
	GetAdminUserProfile(ctx context.Context, in *GetAdminUserProfileRequest, opts ...grpc.CallOption) (*GetAdminUserProfileResponse, error)
	SearchAdminUserProfiles(ctx context.Context, in *SearchAdminUserProfilesRequest, opts ...grpc.CallOption) (*SearchAdminUserProfilesResponse, error)
	UpdateAdminUserProfile(ctx context.Context, in *UpdateAdminUserProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type userProfileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserProfileServiceClient(cc grpc.ClientConnInterface) UserProfileServiceClient {
	return &userProfileServiceClient{cc}
}

func (c *userProfileServiceClient) GetUserProfile(ctx context.Context, in *GetUserProfileRequest, opts ...grpc.CallOption) (*GetUserProfileResponse, error) {
	out := new(GetUserProfileResponse)
	err := c.cc.Invoke(ctx, "/userprofile.v1.UserProfileService/GetUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfileServiceClient) UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/userprofile.v1.UserProfileService/UpdateUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfileServiceClient) GetOwnUserProfile(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetOwnUserProfileResponse, error) {
	out := new(GetOwnUserProfileResponse)
	err := c.cc.Invoke(ctx, "/userprofile.v1.UserProfileService/GetOwnUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfileServiceClient) GetAdminUserProfile(ctx context.Context, in *GetAdminUserProfileRequest, opts ...grpc.CallOption) (*GetAdminUserProfileResponse, error) {
	out := new(GetAdminUserProfileResponse)
	err := c.cc.Invoke(ctx, "/userprofile.v1.UserProfileService/GetAdminUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfileServiceClient) SearchAdminUserProfiles(ctx context.Context, in *SearchAdminUserProfilesRequest, opts ...grpc.CallOption) (*SearchAdminUserProfilesResponse, error) {
	out := new(SearchAdminUserProfilesResponse)
	err := c.cc.Invoke(ctx, "/userprofile.v1.UserProfileService/SearchAdminUserProfiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfileServiceClient) UpdateAdminUserProfile(ctx context.Context, in *UpdateAdminUserProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/userprofile.v1.UserProfileService/UpdateAdminUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserProfileServiceServer is the server API for UserProfileService service.
// All implementations should embed UnimplementedUserProfileServiceServer
// for forward compatibility
type UserProfileServiceServer interface {
	GetUserProfile(context.Context, *GetUserProfileRequest) (*GetUserProfileResponse, error)
	UpdateUserProfile(context.Context, *UpdateUserProfileRequest) (*emptypb.Empty, error)
	GetOwnUserProfile(context.Context, *emptypb.Empty) (*GetOwnUserProfileResponse, error)
	GetAdminUserProfile(context.Context, *GetAdminUserProfileRequest) (*GetAdminUserProfileResponse, error)
	SearchAdminUserProfiles(context.Context, *SearchAdminUserProfilesRequest) (*SearchAdminUserProfilesResponse, error)
	UpdateAdminUserProfile(context.Context, *UpdateAdminUserProfileRequest) (*emptypb.Empty, error)
}

// UnimplementedUserProfileServiceServer should be embedded to have forward compatible implementations.
type UnimplementedUserProfileServiceServer struct {
}

func (UnimplementedUserProfileServiceServer) GetUserProfile(context.Context, *GetUserProfileRequest) (*GetUserProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserProfile not implemented")
}
func (UnimplementedUserProfileServiceServer) UpdateUserProfile(context.Context, *UpdateUserProfileRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserProfile not implemented")
}
func (UnimplementedUserProfileServiceServer) GetOwnUserProfile(context.Context, *emptypb.Empty) (*GetOwnUserProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOwnUserProfile not implemented")
}
func (UnimplementedUserProfileServiceServer) GetAdminUserProfile(context.Context, *GetAdminUserProfileRequest) (*GetAdminUserProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAdminUserProfile not implemented")
}
func (UnimplementedUserProfileServiceServer) SearchAdminUserProfiles(context.Context, *SearchAdminUserProfilesRequest) (*SearchAdminUserProfilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchAdminUserProfiles not implemented")
}
func (UnimplementedUserProfileServiceServer) UpdateAdminUserProfile(context.Context, *UpdateAdminUserProfileRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAdminUserProfile not implemented")
}

// UnsafeUserProfileServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserProfileServiceServer will
// result in compilation errors.
type UnsafeUserProfileServiceServer interface {
	mustEmbedUnimplementedUserProfileServiceServer()
}

func RegisterUserProfileServiceServer(s grpc.ServiceRegistrar, srv UserProfileServiceServer) {
	s.RegisterService(&UserProfileService_ServiceDesc, srv)
}

func _UserProfileService_GetUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).GetUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userprofile.v1.UserProfileService/GetUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).GetUserProfile(ctx, req.(*GetUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfileService_UpdateUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).UpdateUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userprofile.v1.UserProfileService/UpdateUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).UpdateUserProfile(ctx, req.(*UpdateUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfileService_GetOwnUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).GetOwnUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userprofile.v1.UserProfileService/GetOwnUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).GetOwnUserProfile(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfileService_GetAdminUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAdminUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).GetAdminUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userprofile.v1.UserProfileService/GetAdminUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).GetAdminUserProfile(ctx, req.(*GetAdminUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfileService_SearchAdminUserProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchAdminUserProfilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).SearchAdminUserProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userprofile.v1.UserProfileService/SearchAdminUserProfiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).SearchAdminUserProfiles(ctx, req.(*SearchAdminUserProfilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfileService_UpdateAdminUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAdminUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfileServiceServer).UpdateAdminUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userprofile.v1.UserProfileService/UpdateAdminUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfileServiceServer).UpdateAdminUserProfile(ctx, req.(*UpdateAdminUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UserProfileService_ServiceDesc is the grpc.ServiceDesc for UserProfileService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserProfileService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "userprofile.v1.UserProfileService",
	HandlerType: (*UserProfileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserProfile",
			Handler:    _UserProfileService_GetUserProfile_Handler,
		},
		{
			MethodName: "UpdateUserProfile",
			Handler:    _UserProfileService_UpdateUserProfile_Handler,
		},
		{
			MethodName: "GetOwnUserProfile",
			Handler:    _UserProfileService_GetOwnUserProfile_Handler,
		},
		{
			MethodName: "GetAdminUserProfile",
			Handler:    _UserProfileService_GetAdminUserProfile_Handler,
		},
		{
			MethodName: "SearchAdminUserProfiles",
			Handler:    _UserProfileService_SearchAdminUserProfiles_Handler,
		},
		{
			MethodName: "UpdateAdminUserProfile",
			Handler:    _UserProfileService_UpdateAdminUserProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_profile/v1/user_profile.proto",
}
