// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: profile/v1/profile.proto

package profilev1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ProfileServiceClient is the client API for ProfileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ProfileServiceClient interface {
	GetGenders(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetGendersResponse, error)
	GetPrefectures(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetPrefecturesResponse, error)
	GetCities(ctx context.Context, in *GetCitiesRequest, opts ...grpc.CallOption) (*GetCitiesResponse, error)
	GetJobs(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetJobsResponse, error)
	GetAlcohols(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAlcoholsResponse, error)
	GetAnnualIncomes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAnnualIncomesResponse, error)
	GetBloodTypes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetBloodTypesResponse, error)
	GetCigarettes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCigarettesResponse, error)
	GetDateCosts(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetDateCostsResponse, error)
	GetEducationalBackgrounds(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetEducationalBackgroundsResponse, error)
	GetHolidays(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetHolidaysResponse, error)
	GetHousemates(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetHousematesResponse, error)
	GetShapes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetShapesResponse, error)
	GetPersonalities(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetPersonalitiesResponse, error)
	GetHobbies(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetHobbiesResponse, error)
	GetPlanCategories(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetPlanCategoriesResponse, error)
}

type profileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProfileServiceClient(cc grpc.ClientConnInterface) ProfileServiceClient {
	return &profileServiceClient{cc}
}

func (c *profileServiceClient) GetGenders(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetGendersResponse, error) {
	out := new(GetGendersResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetGenders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetPrefectures(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetPrefecturesResponse, error) {
	out := new(GetPrefecturesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetPrefectures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetCities(ctx context.Context, in *GetCitiesRequest, opts ...grpc.CallOption) (*GetCitiesResponse, error) {
	out := new(GetCitiesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetCities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetJobs(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetJobsResponse, error) {
	out := new(GetJobsResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetAlcohols(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAlcoholsResponse, error) {
	out := new(GetAlcoholsResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetAlcohols", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetAnnualIncomes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAnnualIncomesResponse, error) {
	out := new(GetAnnualIncomesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetAnnualIncomes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetBloodTypes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetBloodTypesResponse, error) {
	out := new(GetBloodTypesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetBloodTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetCigarettes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCigarettesResponse, error) {
	out := new(GetCigarettesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetCigarettes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetDateCosts(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetDateCostsResponse, error) {
	out := new(GetDateCostsResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetDateCosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetEducationalBackgrounds(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetEducationalBackgroundsResponse, error) {
	out := new(GetEducationalBackgroundsResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetEducationalBackgrounds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetHolidays(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetHolidaysResponse, error) {
	out := new(GetHolidaysResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetHolidays", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetHousemates(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetHousematesResponse, error) {
	out := new(GetHousematesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetHousemates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetShapes(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetShapesResponse, error) {
	out := new(GetShapesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetShapes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetPersonalities(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetPersonalitiesResponse, error) {
	out := new(GetPersonalitiesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetPersonalities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetHobbies(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetHobbiesResponse, error) {
	out := new(GetHobbiesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetHobbies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileServiceClient) GetPlanCategories(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetPlanCategoriesResponse, error) {
	out := new(GetPlanCategoriesResponse)
	err := c.cc.Invoke(ctx, "/profile.v1.ProfileService/GetPlanCategories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfileServiceServer is the server API for ProfileService service.
// All implementations should embed UnimplementedProfileServiceServer
// for forward compatibility
type ProfileServiceServer interface {
	GetGenders(context.Context, *emptypb.Empty) (*GetGendersResponse, error)
	GetPrefectures(context.Context, *emptypb.Empty) (*GetPrefecturesResponse, error)
	GetCities(context.Context, *GetCitiesRequest) (*GetCitiesResponse, error)
	GetJobs(context.Context, *emptypb.Empty) (*GetJobsResponse, error)
	GetAlcohols(context.Context, *emptypb.Empty) (*GetAlcoholsResponse, error)
	GetAnnualIncomes(context.Context, *emptypb.Empty) (*GetAnnualIncomesResponse, error)
	GetBloodTypes(context.Context, *emptypb.Empty) (*GetBloodTypesResponse, error)
	GetCigarettes(context.Context, *emptypb.Empty) (*GetCigarettesResponse, error)
	GetDateCosts(context.Context, *emptypb.Empty) (*GetDateCostsResponse, error)
	GetEducationalBackgrounds(context.Context, *emptypb.Empty) (*GetEducationalBackgroundsResponse, error)
	GetHolidays(context.Context, *emptypb.Empty) (*GetHolidaysResponse, error)
	GetHousemates(context.Context, *emptypb.Empty) (*GetHousematesResponse, error)
	GetShapes(context.Context, *emptypb.Empty) (*GetShapesResponse, error)
	GetPersonalities(context.Context, *emptypb.Empty) (*GetPersonalitiesResponse, error)
	GetHobbies(context.Context, *emptypb.Empty) (*GetHobbiesResponse, error)
	GetPlanCategories(context.Context, *emptypb.Empty) (*GetPlanCategoriesResponse, error)
}

// UnimplementedProfileServiceServer should be embedded to have forward compatible implementations.
type UnimplementedProfileServiceServer struct {
}

func (UnimplementedProfileServiceServer) GetGenders(context.Context, *emptypb.Empty) (*GetGendersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGenders not implemented")
}
func (UnimplementedProfileServiceServer) GetPrefectures(context.Context, *emptypb.Empty) (*GetPrefecturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrefectures not implemented")
}
func (UnimplementedProfileServiceServer) GetCities(context.Context, *GetCitiesRequest) (*GetCitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCities not implemented")
}
func (UnimplementedProfileServiceServer) GetJobs(context.Context, *emptypb.Empty) (*GetJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobs not implemented")
}
func (UnimplementedProfileServiceServer) GetAlcohols(context.Context, *emptypb.Empty) (*GetAlcoholsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlcohols not implemented")
}
func (UnimplementedProfileServiceServer) GetAnnualIncomes(context.Context, *emptypb.Empty) (*GetAnnualIncomesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnnualIncomes not implemented")
}
func (UnimplementedProfileServiceServer) GetBloodTypes(context.Context, *emptypb.Empty) (*GetBloodTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBloodTypes not implemented")
}
func (UnimplementedProfileServiceServer) GetCigarettes(context.Context, *emptypb.Empty) (*GetCigarettesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCigarettes not implemented")
}
func (UnimplementedProfileServiceServer) GetDateCosts(context.Context, *emptypb.Empty) (*GetDateCostsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDateCosts not implemented")
}
func (UnimplementedProfileServiceServer) GetEducationalBackgrounds(context.Context, *emptypb.Empty) (*GetEducationalBackgroundsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEducationalBackgrounds not implemented")
}
func (UnimplementedProfileServiceServer) GetHolidays(context.Context, *emptypb.Empty) (*GetHolidaysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHolidays not implemented")
}
func (UnimplementedProfileServiceServer) GetHousemates(context.Context, *emptypb.Empty) (*GetHousematesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHousemates not implemented")
}
func (UnimplementedProfileServiceServer) GetShapes(context.Context, *emptypb.Empty) (*GetShapesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShapes not implemented")
}
func (UnimplementedProfileServiceServer) GetPersonalities(context.Context, *emptypb.Empty) (*GetPersonalitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPersonalities not implemented")
}
func (UnimplementedProfileServiceServer) GetHobbies(context.Context, *emptypb.Empty) (*GetHobbiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHobbies not implemented")
}
func (UnimplementedProfileServiceServer) GetPlanCategories(context.Context, *emptypb.Empty) (*GetPlanCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlanCategories not implemented")
}

// UnsafeProfileServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProfileServiceServer will
// result in compilation errors.
type UnsafeProfileServiceServer interface {
	mustEmbedUnimplementedProfileServiceServer()
}

func RegisterProfileServiceServer(s grpc.ServiceRegistrar, srv ProfileServiceServer) {
	s.RegisterService(&ProfileService_ServiceDesc, srv)
}

func _ProfileService_GetGenders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetGenders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetGenders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetGenders(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetPrefectures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetPrefectures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetPrefectures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetPrefectures(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetCities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetCities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetCities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetCities(ctx, req.(*GetCitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetJobs(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetAlcohols_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetAlcohols(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetAlcohols",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetAlcohols(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetAnnualIncomes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetAnnualIncomes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetAnnualIncomes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetAnnualIncomes(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetBloodTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetBloodTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetBloodTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetBloodTypes(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetCigarettes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetCigarettes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetCigarettes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetCigarettes(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetDateCosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetDateCosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetDateCosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetDateCosts(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetEducationalBackgrounds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetEducationalBackgrounds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetEducationalBackgrounds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetEducationalBackgrounds(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetHolidays_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetHolidays(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetHolidays",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetHolidays(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetHousemates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetHousemates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetHousemates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetHousemates(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetShapes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetShapes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetShapes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetShapes(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetPersonalities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetPersonalities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetPersonalities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetPersonalities(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetHobbies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetHobbies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetHobbies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetHobbies(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileService_GetPlanCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).GetPlanCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.v1.ProfileService/GetPlanCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).GetPlanCategories(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// ProfileService_ServiceDesc is the grpc.ServiceDesc for ProfileService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProfileService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "profile.v1.ProfileService",
	HandlerType: (*ProfileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGenders",
			Handler:    _ProfileService_GetGenders_Handler,
		},
		{
			MethodName: "GetPrefectures",
			Handler:    _ProfileService_GetPrefectures_Handler,
		},
		{
			MethodName: "GetCities",
			Handler:    _ProfileService_GetCities_Handler,
		},
		{
			MethodName: "GetJobs",
			Handler:    _ProfileService_GetJobs_Handler,
		},
		{
			MethodName: "GetAlcohols",
			Handler:    _ProfileService_GetAlcohols_Handler,
		},
		{
			MethodName: "GetAnnualIncomes",
			Handler:    _ProfileService_GetAnnualIncomes_Handler,
		},
		{
			MethodName: "GetBloodTypes",
			Handler:    _ProfileService_GetBloodTypes_Handler,
		},
		{
			MethodName: "GetCigarettes",
			Handler:    _ProfileService_GetCigarettes_Handler,
		},
		{
			MethodName: "GetDateCosts",
			Handler:    _ProfileService_GetDateCosts_Handler,
		},
		{
			MethodName: "GetEducationalBackgrounds",
			Handler:    _ProfileService_GetEducationalBackgrounds_Handler,
		},
		{
			MethodName: "GetHolidays",
			Handler:    _ProfileService_GetHolidays_Handler,
		},
		{
			MethodName: "GetHousemates",
			Handler:    _ProfileService_GetHousemates_Handler,
		},
		{
			MethodName: "GetShapes",
			Handler:    _ProfileService_GetShapes_Handler,
		},
		{
			MethodName: "GetPersonalities",
			Handler:    _ProfileService_GetPersonalities_Handler,
		},
		{
			MethodName: "GetHobbies",
			Handler:    _ProfileService_GetHobbies_Handler,
		},
		{
			MethodName: "GetPlanCategories",
			Handler:    _ProfileService_GetPlanCategories_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "profile/v1/profile.proto",
}
