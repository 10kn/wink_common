// 参考
// https://zenn.dev/hsaki/books/golang-grpc-starting/viewer/proto
// https://dev.classmethod.jp/articles/golang-grpc-sample-project/
//

// protoのバージョンです。

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: report_information/v1/report_information.proto

// メッセージ型などの名前の衝突を避けるためにパッケージ名を指定します。

package reportinformationv1

import (
	v1 "github.com/gisucoinc/ebisuiru-fc-common/server/common/v1"
	date "google.golang.org/genproto/googleapis/type/date"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportReason int32

const (
	ReportReason_REPORT_REASON_UNKNOWN ReportReason = 0
	// 他人の写真を使用している
	ReportReason_USING_OTHERS_PHOTO ReportReason = 1
	// 顔のわかる写真が一枚もない
	ReportReason_NO_FACE_PHOTO_AVAILABLE ReportReason = 2
	// 勧誘行為
	ReportReason_SOLICITATION_ACTIVITY ReportReason = 3
	// 体目的の関係
	ReportReason_SEEKING_PHYSICAL_RELATIONSHIPS ReportReason = 4
	// マルチ商法等の商売目的
	ReportReason_BUSINESS_PURPOSES_ACTIVITY ReportReason = 5
	// 売春などの金銭目的
	ReportReason_SELLING_SEX_OR_PROSTITUTION ReportReason = 6
	// プロフィールの詐欺
	ReportReason_FRAUDULENT_PROFILE_INFORMATION ReportReason = 7
	// プロフィール内に個人情報を記載している
	ReportReason_DISCLOSING_PERSONAL_INFORMATION ReportReason = 8
	// メッセージやプロフィールでの不適切な表現
	ReportReason_INAPPROPRIATE_CONTENT_OR_LANGUAGE ReportReason = 9
	// 急なキャンセル
	ReportReason_SUDDEN_CANCELLATION ReportReason = 10
	// その他不快な行為
	ReportReason_OTHER_INAPPROPRIATE_BEHAVIOR ReportReason = 11
)

// Enum value maps for ReportReason.
var (
	ReportReason_name = map[int32]string{
		0:  "REPORT_REASON_UNKNOWN",
		1:  "USING_OTHERS_PHOTO",
		2:  "NO_FACE_PHOTO_AVAILABLE",
		3:  "SOLICITATION_ACTIVITY",
		4:  "SEEKING_PHYSICAL_RELATIONSHIPS",
		5:  "BUSINESS_PURPOSES_ACTIVITY",
		6:  "SELLING_SEX_OR_PROSTITUTION",
		7:  "FRAUDULENT_PROFILE_INFORMATION",
		8:  "DISCLOSING_PERSONAL_INFORMATION",
		9:  "INAPPROPRIATE_CONTENT_OR_LANGUAGE",
		10: "SUDDEN_CANCELLATION",
		11: "OTHER_INAPPROPRIATE_BEHAVIOR",
	}
	ReportReason_value = map[string]int32{
		"REPORT_REASON_UNKNOWN":             0,
		"USING_OTHERS_PHOTO":                1,
		"NO_FACE_PHOTO_AVAILABLE":           2,
		"SOLICITATION_ACTIVITY":             3,
		"SEEKING_PHYSICAL_RELATIONSHIPS":    4,
		"BUSINESS_PURPOSES_ACTIVITY":        5,
		"SELLING_SEX_OR_PROSTITUTION":       6,
		"FRAUDULENT_PROFILE_INFORMATION":    7,
		"DISCLOSING_PERSONAL_INFORMATION":   8,
		"INAPPROPRIATE_CONTENT_OR_LANGUAGE": 9,
		"SUDDEN_CANCELLATION":               10,
		"OTHER_INAPPROPRIATE_BEHAVIOR":      11,
	}
)

func (x ReportReason) Enum() *ReportReason {
	p := new(ReportReason)
	*p = x
	return p
}

func (x ReportReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportReason) Descriptor() protoreflect.EnumDescriptor {
	return file_report_information_v1_report_information_proto_enumTypes[0].Descriptor()
}

func (ReportReason) Type() protoreflect.EnumType {
	return &file_report_information_v1_report_information_proto_enumTypes[0]
}

func (x ReportReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportReason.Descriptor instead.
func (ReportReason) EnumDescriptor() ([]byte, []int) {
	return file_report_information_v1_report_information_proto_rawDescGZIP(), []int{0}
}

type ReportStatus int32

const (
	ReportStatus_REPORT_STATUS_UNKNOWN ReportStatus = 0
	ReportStatus_UNCHECKED             ReportStatus = 1
	ReportStatus_CHECKED               ReportStatus = 2
)

// Enum value maps for ReportStatus.
var (
	ReportStatus_name = map[int32]string{
		0: "REPORT_STATUS_UNKNOWN",
		1: "UNCHECKED",
		2: "CHECKED",
	}
	ReportStatus_value = map[string]int32{
		"REPORT_STATUS_UNKNOWN": 0,
		"UNCHECKED":             1,
		"CHECKED":               2,
	}
)

func (x ReportStatus) Enum() *ReportStatus {
	p := new(ReportStatus)
	*p = x
	return p
}

func (x ReportStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_report_information_v1_report_information_proto_enumTypes[1].Descriptor()
}

func (ReportStatus) Type() protoreflect.EnumType {
	return &file_report_information_v1_report_information_proto_enumTypes[1]
}

func (x ReportStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportStatus.Descriptor instead.
func (ReportStatus) EnumDescriptor() ([]byte, []int) {
	return file_report_information_v1_report_information_proto_rawDescGZIP(), []int{1}
}

type SendReportInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportTargetUserId string         `protobuf:"bytes,1,opt,name=reportTargetUserId,proto3" json:"reportTargetUserId,omitempty"`
	ReportReasons      []ReportReason `protobuf:"varint,2,rep,packed,name=reportReasons,proto3,enum=reportinformation.v1.ReportReason" json:"reportReasons,omitempty"`
	ReportComment      string         `protobuf:"bytes,3,opt,name=reportComment,proto3" json:"reportComment,omitempty"`
}

func (x *SendReportInformationRequest) Reset() {
	*x = SendReportInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_information_v1_report_information_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReportInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReportInformationRequest) ProtoMessage() {}

func (x *SendReportInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_information_v1_report_information_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReportInformationRequest.ProtoReflect.Descriptor instead.
func (*SendReportInformationRequest) Descriptor() ([]byte, []int) {
	return file_report_information_v1_report_information_proto_rawDescGZIP(), []int{0}
}

func (x *SendReportInformationRequest) GetReportTargetUserId() string {
	if x != nil {
		return x.ReportTargetUserId
	}
	return ""
}

func (x *SendReportInformationRequest) GetReportReasons() []ReportReason {
	if x != nil {
		return x.ReportReasons
	}
	return nil
}

func (x *SendReportInformationRequest) GetReportComment() string {
	if x != nil {
		return x.ReportComment
	}
	return ""
}

type SearchReportInformationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportStatus ReportStatus `protobuf:"varint,1,opt,name=reportStatus,proto3,enum=reportinformation.v1.ReportStatus" json:"reportStatus,omitempty"`
	Limit        *uint32      `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Page         *uint32      `protobuf:"varint,3,opt,name=page,proto3,oneof" json:"page,omitempty"`
}

func (x *SearchReportInformationsRequest) Reset() {
	*x = SearchReportInformationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_information_v1_report_information_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReportInformationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReportInformationsRequest) ProtoMessage() {}

func (x *SearchReportInformationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_information_v1_report_information_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReportInformationsRequest.ProtoReflect.Descriptor instead.
func (*SearchReportInformationsRequest) Descriptor() ([]byte, []int) {
	return file_report_information_v1_report_information_proto_rawDescGZIP(), []int{1}
}

func (x *SearchReportInformationsRequest) GetReportStatus() ReportStatus {
	if x != nil {
		return x.ReportStatus
	}
	return ReportStatus_REPORT_STATUS_UNKNOWN
}

func (x *SearchReportInformationsRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *SearchReportInformationsRequest) GetPage() uint32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

type SearchReportInformationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []*SearchReportInformations `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Paging *v1.Paging                  `protobuf:"bytes,5,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *SearchReportInformationsResponse) Reset() {
	*x = SearchReportInformationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_information_v1_report_information_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReportInformationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReportInformationsResponse) ProtoMessage() {}

func (x *SearchReportInformationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_report_information_v1_report_information_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReportInformationsResponse.ProtoReflect.Descriptor instead.
func (*SearchReportInformationsResponse) Descriptor() ([]byte, []int) {
	return file_report_information_v1_report_information_proto_rawDescGZIP(), []int{2}
}

func (x *SearchReportInformationsResponse) GetData() []*SearchReportInformations {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchReportInformationsResponse) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type SearchReportInformations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TargetImagePath  string         `protobuf:"bytes,2,opt,name=targetImagePath,proto3" json:"targetImagePath,omitempty"`
	TargetUserId     string         `protobuf:"bytes,3,opt,name=targetUserId,proto3" json:"targetUserId,omitempty"`
	TargetNickname   string         `protobuf:"bytes,4,opt,name=targetNickname,proto3" json:"targetNickname,omitempty"`
	ReporterUserId   string         `protobuf:"bytes,5,opt,name=reporterUserId,proto3" json:"reporterUserId,omitempty"`
	ReporterNickname string         `protobuf:"bytes,6,opt,name=reporterNickname,proto3" json:"reporterNickname,omitempty"`
	ReportedAt       *date.Date     `protobuf:"bytes,7,opt,name=reportedAt,proto3" json:"reportedAt,omitempty"`
	Reasons          []ReportReason `protobuf:"varint,8,rep,packed,name=reasons,proto3,enum=reportinformation.v1.ReportReason" json:"reasons,omitempty"`
	Comment          string         `protobuf:"bytes,9,opt,name=comment,proto3" json:"comment,omitempty"`
	ReportStatus     ReportStatus   `protobuf:"varint,10,opt,name=reportStatus,proto3,enum=reportinformation.v1.ReportStatus" json:"reportStatus,omitempty"`
}

func (x *SearchReportInformations) Reset() {
	*x = SearchReportInformations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_information_v1_report_information_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReportInformations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReportInformations) ProtoMessage() {}

func (x *SearchReportInformations) ProtoReflect() protoreflect.Message {
	mi := &file_report_information_v1_report_information_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReportInformations.ProtoReflect.Descriptor instead.
func (*SearchReportInformations) Descriptor() ([]byte, []int) {
	return file_report_information_v1_report_information_proto_rawDescGZIP(), []int{3}
}

func (x *SearchReportInformations) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchReportInformations) GetTargetImagePath() string {
	if x != nil {
		return x.TargetImagePath
	}
	return ""
}

func (x *SearchReportInformations) GetTargetUserId() string {
	if x != nil {
		return x.TargetUserId
	}
	return ""
}

func (x *SearchReportInformations) GetTargetNickname() string {
	if x != nil {
		return x.TargetNickname
	}
	return ""
}

func (x *SearchReportInformations) GetReporterUserId() string {
	if x != nil {
		return x.ReporterUserId
	}
	return ""
}

func (x *SearchReportInformations) GetReporterNickname() string {
	if x != nil {
		return x.ReporterNickname
	}
	return ""
}

func (x *SearchReportInformations) GetReportedAt() *date.Date {
	if x != nil {
		return x.ReportedAt
	}
	return nil
}

func (x *SearchReportInformations) GetReasons() []ReportReason {
	if x != nil {
		return x.Reasons
	}
	return nil
}

func (x *SearchReportInformations) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SearchReportInformations) GetReportStatus() ReportStatus {
	if x != nil {
		return x.ReportStatus
	}
	return ReportStatus_REPORT_STATUS_UNKNOWN
}

type CheckReportInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReportStatus ReportStatus `protobuf:"varint,2,opt,name=reportStatus,proto3,enum=reportinformation.v1.ReportStatus" json:"reportStatus,omitempty"`
}

func (x *CheckReportInformationRequest) Reset() {
	*x = CheckReportInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_information_v1_report_information_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckReportInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckReportInformationRequest) ProtoMessage() {}

func (x *CheckReportInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_information_v1_report_information_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckReportInformationRequest.ProtoReflect.Descriptor instead.
func (*CheckReportInformationRequest) Descriptor() ([]byte, []int) {
	return file_report_information_v1_report_information_proto_rawDescGZIP(), []int{4}
}

func (x *CheckReportInformationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckReportInformationRequest) GetReportStatus() ReportStatus {
	if x != nil {
		return x.ReportStatus
	}
	return ReportStatus_REPORT_STATUS_UNKNOWN
}

var File_report_information_v1_report_information_proto protoreflect.FileDescriptor

var file_report_information_v1_report_information_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x20, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0xc7, 0x03, 0x0a, 0x18,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a,
	0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x77, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x89,
	0x03, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x15, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53,
	0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x53, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f,
	0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x4f, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x50, 0x48,
	0x4f, 0x54, 0x4f, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12,
	0x19, 0x0a, 0x15, 0x53, 0x4f, 0x4c, 0x49, 0x43, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x45,
	0x45, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x48, 0x59, 0x53, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x53, 0x10, 0x04, 0x12, 0x1e,
	0x0a, 0x1a, 0x42, 0x55, 0x53, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4f,
	0x53, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x05, 0x12, 0x1f,
	0x0a, 0x1b, 0x53, 0x45, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x45, 0x58, 0x5f, 0x4f, 0x52,
	0x5f, 0x50, 0x52, 0x4f, 0x53, 0x54, 0x49, 0x54, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12,
	0x22, 0x0a, 0x1e, 0x46, 0x52, 0x41, 0x55, 0x44, 0x55, 0x4c, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x07, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x49, 0x53, 0x43, 0x4c, 0x4f, 0x53, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x25, 0x0a, 0x21, 0x49, 0x4e, 0x41, 0x50,
	0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e,
	0x54, 0x5f, 0x4f, 0x52, 0x5f, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x10, 0x09, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x55, 0x44, 0x44, 0x45, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x20, 0x0a, 0x1c, 0x4f, 0x54, 0x48, 0x45,
	0x52, 0x5f, 0x49, 0x4e, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x41, 0x54, 0x45, 0x5f,
	0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x10, 0x0b, 0x2a, 0x45, 0x0a, 0x0c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x43, 0x48, 0x45, 0x43, 0x4b,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x45, 0x44, 0x10,
	0x02, 0x32, 0xf2, 0x02, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63,
	0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x89, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x35, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x65, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x5a, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x73, 0x75, 0x63, 0x6f, 0x69, 0x6e, 0x63, 0x2f, 0x65,
	0x62, 0x69, 0x73, 0x75, 0x69, 0x72, 0x75, 0x2d, 0x66, 0x63, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_report_information_v1_report_information_proto_rawDescOnce sync.Once
	file_report_information_v1_report_information_proto_rawDescData = file_report_information_v1_report_information_proto_rawDesc
)

func file_report_information_v1_report_information_proto_rawDescGZIP() []byte {
	file_report_information_v1_report_information_proto_rawDescOnce.Do(func() {
		file_report_information_v1_report_information_proto_rawDescData = protoimpl.X.CompressGZIP(file_report_information_v1_report_information_proto_rawDescData)
	})
	return file_report_information_v1_report_information_proto_rawDescData
}

var file_report_information_v1_report_information_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_report_information_v1_report_information_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_report_information_v1_report_information_proto_goTypes = []interface{}{
	(ReportReason)(0),                        // 0: reportinformation.v1.ReportReason
	(ReportStatus)(0),                        // 1: reportinformation.v1.ReportStatus
	(*SendReportInformationRequest)(nil),     // 2: reportinformation.v1.SendReportInformationRequest
	(*SearchReportInformationsRequest)(nil),  // 3: reportinformation.v1.SearchReportInformationsRequest
	(*SearchReportInformationsResponse)(nil), // 4: reportinformation.v1.SearchReportInformationsResponse
	(*SearchReportInformations)(nil),         // 5: reportinformation.v1.SearchReportInformations
	(*CheckReportInformationRequest)(nil),    // 6: reportinformation.v1.CheckReportInformationRequest
	(*v1.Paging)(nil),                        // 7: common.v1.Paging
	(*date.Date)(nil),                        // 8: google.type.Date
	(*emptypb.Empty)(nil),                    // 9: google.protobuf.Empty
}
var file_report_information_v1_report_information_proto_depIdxs = []int32{
	0,  // 0: reportinformation.v1.SendReportInformationRequest.reportReasons:type_name -> reportinformation.v1.ReportReason
	1,  // 1: reportinformation.v1.SearchReportInformationsRequest.reportStatus:type_name -> reportinformation.v1.ReportStatus
	5,  // 2: reportinformation.v1.SearchReportInformationsResponse.data:type_name -> reportinformation.v1.SearchReportInformations
	7,  // 3: reportinformation.v1.SearchReportInformationsResponse.paging:type_name -> common.v1.Paging
	8,  // 4: reportinformation.v1.SearchReportInformations.reportedAt:type_name -> google.type.Date
	0,  // 5: reportinformation.v1.SearchReportInformations.reasons:type_name -> reportinformation.v1.ReportReason
	1,  // 6: reportinformation.v1.SearchReportInformations.reportStatus:type_name -> reportinformation.v1.ReportStatus
	1,  // 7: reportinformation.v1.CheckReportInformationRequest.reportStatus:type_name -> reportinformation.v1.ReportStatus
	2,  // 8: reportinformation.v1.ReportInformationService.SendReportInformation:input_type -> reportinformation.v1.SendReportInformationRequest
	3,  // 9: reportinformation.v1.ReportInformationService.SearchReportInformations:input_type -> reportinformation.v1.SearchReportInformationsRequest
	6,  // 10: reportinformation.v1.ReportInformationService.CheckReportInformation:input_type -> reportinformation.v1.CheckReportInformationRequest
	9,  // 11: reportinformation.v1.ReportInformationService.SendReportInformation:output_type -> google.protobuf.Empty
	4,  // 12: reportinformation.v1.ReportInformationService.SearchReportInformations:output_type -> reportinformation.v1.SearchReportInformationsResponse
	9,  // 13: reportinformation.v1.ReportInformationService.CheckReportInformation:output_type -> google.protobuf.Empty
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_report_information_v1_report_information_proto_init() }
func file_report_information_v1_report_information_proto_init() {
	if File_report_information_v1_report_information_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_report_information_v1_report_information_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReportInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_information_v1_report_information_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReportInformationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_information_v1_report_information_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReportInformationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_information_v1_report_information_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReportInformations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_information_v1_report_information_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckReportInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_report_information_v1_report_information_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_report_information_v1_report_information_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_report_information_v1_report_information_proto_goTypes,
		DependencyIndexes: file_report_information_v1_report_information_proto_depIdxs,
		EnumInfos:         file_report_information_v1_report_information_proto_enumTypes,
		MessageInfos:      file_report_information_v1_report_information_proto_msgTypes,
	}.Build()
	File_report_information_v1_report_information_proto = out.File
	file_report_information_v1_report_information_proto_rawDesc = nil
	file_report_information_v1_report_information_proto_goTypes = nil
	file_report_information_v1_report_information_proto_depIdxs = nil
}
