// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: user_request/v1/user_request_admin.proto

package user_requestv1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1 "github.com/gisucoinc/ebisuiru-fc-common/server/user_request/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// UserRequestAdminServiceName is the fully-qualified name of the UserRequestAdminService service.
	UserRequestAdminServiceName = "user_request.v1.UserRequestAdminService"
)

// UserRequestAdminServiceClient is a client for the user_request.v1.UserRequestAdminService
// service.
type UserRequestAdminServiceClient interface {
	ListUserRequestForAdmin(context.Context, *connect_go.Request[v1.ListUserRequestForAdminRequest]) (*connect_go.Response[v1.ListUserRequestForAdminResponse], error)
	UpdateUserRequestForAdmin(context.Context, *connect_go.Request[v1.UpdateUserRequestForAdminRequest]) (*connect_go.Response[v1.UpdateUserRequestForAdminResponse], error)
}

// NewUserRequestAdminServiceClient constructs a client for the
// user_request.v1.UserRequestAdminService service. By default, it uses the Connect protocol with
// the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed requests. To use
// the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewUserRequestAdminServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) UserRequestAdminServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &userRequestAdminServiceClient{
		listUserRequestForAdmin: connect_go.NewClient[v1.ListUserRequestForAdminRequest, v1.ListUserRequestForAdminResponse](
			httpClient,
			baseURL+"/user_request.v1.UserRequestAdminService/ListUserRequestForAdmin",
			opts...,
		),
		updateUserRequestForAdmin: connect_go.NewClient[v1.UpdateUserRequestForAdminRequest, v1.UpdateUserRequestForAdminResponse](
			httpClient,
			baseURL+"/user_request.v1.UserRequestAdminService/UpdateUserRequestForAdmin",
			opts...,
		),
	}
}

// userRequestAdminServiceClient implements UserRequestAdminServiceClient.
type userRequestAdminServiceClient struct {
	listUserRequestForAdmin   *connect_go.Client[v1.ListUserRequestForAdminRequest, v1.ListUserRequestForAdminResponse]
	updateUserRequestForAdmin *connect_go.Client[v1.UpdateUserRequestForAdminRequest, v1.UpdateUserRequestForAdminResponse]
}

// ListUserRequestForAdmin calls user_request.v1.UserRequestAdminService.ListUserRequestForAdmin.
func (c *userRequestAdminServiceClient) ListUserRequestForAdmin(ctx context.Context, req *connect_go.Request[v1.ListUserRequestForAdminRequest]) (*connect_go.Response[v1.ListUserRequestForAdminResponse], error) {
	return c.listUserRequestForAdmin.CallUnary(ctx, req)
}

// UpdateUserRequestForAdmin calls
// user_request.v1.UserRequestAdminService.UpdateUserRequestForAdmin.
func (c *userRequestAdminServiceClient) UpdateUserRequestForAdmin(ctx context.Context, req *connect_go.Request[v1.UpdateUserRequestForAdminRequest]) (*connect_go.Response[v1.UpdateUserRequestForAdminResponse], error) {
	return c.updateUserRequestForAdmin.CallUnary(ctx, req)
}

// UserRequestAdminServiceHandler is an implementation of the
// user_request.v1.UserRequestAdminService service.
type UserRequestAdminServiceHandler interface {
	ListUserRequestForAdmin(context.Context, *connect_go.Request[v1.ListUserRequestForAdminRequest]) (*connect_go.Response[v1.ListUserRequestForAdminResponse], error)
	UpdateUserRequestForAdmin(context.Context, *connect_go.Request[v1.UpdateUserRequestForAdminRequest]) (*connect_go.Response[v1.UpdateUserRequestForAdminResponse], error)
}

// NewUserRequestAdminServiceHandler builds an HTTP handler from the service implementation. It
// returns the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewUserRequestAdminServiceHandler(svc UserRequestAdminServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/user_request.v1.UserRequestAdminService/ListUserRequestForAdmin", connect_go.NewUnaryHandler(
		"/user_request.v1.UserRequestAdminService/ListUserRequestForAdmin",
		svc.ListUserRequestForAdmin,
		opts...,
	))
	mux.Handle("/user_request.v1.UserRequestAdminService/UpdateUserRequestForAdmin", connect_go.NewUnaryHandler(
		"/user_request.v1.UserRequestAdminService/UpdateUserRequestForAdmin",
		svc.UpdateUserRequestForAdmin,
		opts...,
	))
	return "/user_request.v1.UserRequestAdminService/", mux
}

// UnimplementedUserRequestAdminServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedUserRequestAdminServiceHandler struct{}

func (UnimplementedUserRequestAdminServiceHandler) ListUserRequestForAdmin(context.Context, *connect_go.Request[v1.ListUserRequestForAdminRequest]) (*connect_go.Response[v1.ListUserRequestForAdminResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("user_request.v1.UserRequestAdminService.ListUserRequestForAdmin is not implemented"))
}

func (UnimplementedUserRequestAdminServiceHandler) UpdateUserRequestForAdmin(context.Context, *connect_go.Request[v1.UpdateUserRequestForAdminRequest]) (*connect_go.Response[v1.UpdateUserRequestForAdminResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("user_request.v1.UserRequestAdminService.UpdateUserRequestForAdmin is not implemented"))
}
