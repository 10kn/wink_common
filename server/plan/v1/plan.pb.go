// 参考
// https://zenn.dev/hsaki/books/golang-grpc-starting/viewer/proto
// https://dev.classmethod.jp/articles/golang-grpc-sample-project/
//

// protoのバージョンです。

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: plan/v1/plan.proto

// メッセージ型などの名前の衝突を避けるためにパッケージ名を指定します。

package planv1

import (
	v1 "github.com/gisucoinc/ebisuiru-fc-common/server/profile/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAdminPlanCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanCategories []*v1.PlanCategory `protobuf:"bytes,1,rep,name=planCategories,proto3" json:"planCategories,omitempty"`
}

func (x *GetAdminPlanCategoriesResponse) Reset() {
	*x = GetAdminPlanCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminPlanCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminPlanCategoriesResponse) ProtoMessage() {}

func (x *GetAdminPlanCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminPlanCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetAdminPlanCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{0}
}

func (x *GetAdminPlanCategoriesResponse) GetPlanCategories() []*v1.PlanCategory {
	if x != nil {
		return x.PlanCategories
	}
	return nil
}

type CreateAdminPlanCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateAdminPlanCategoryRequest) Reset() {
	*x = CreateAdminPlanCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAdminPlanCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdminPlanCategoryRequest) ProtoMessage() {}

func (x *CreateAdminPlanCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdminPlanCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateAdminPlanCategoryRequest) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAdminPlanCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateAdminPlanCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanCategory *v1.PlanCategory `protobuf:"bytes,1,opt,name=planCategory,proto3" json:"planCategory,omitempty"`
}

func (x *CreateAdminPlanCategoryResponse) Reset() {
	*x = CreateAdminPlanCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAdminPlanCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdminPlanCategoryResponse) ProtoMessage() {}

func (x *CreateAdminPlanCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdminPlanCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreateAdminPlanCategoryResponse) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAdminPlanCategoryResponse) GetPlanCategory() *v1.PlanCategory {
	if x != nil {
		return x.PlanCategory
	}
	return nil
}

type UpdateAdminPlanCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateAdminPlanCategoryRequest) Reset() {
	*x = UpdateAdminPlanCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdminPlanCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminPlanCategoryRequest) ProtoMessage() {}

func (x *UpdateAdminPlanCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminPlanCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateAdminPlanCategoryRequest) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAdminPlanCategoryRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAdminPlanCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteAdminPlanCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanIds         []uint32 `protobuf:"varint,1,rep,packed,name=planIds,proto3" json:"planIds,omitempty"`
	PlanCategoryIds []uint32 `protobuf:"varint,2,rep,packed,name=planCategoryIds,proto3" json:"planCategoryIds,omitempty"`
}

func (x *DeleteAdminPlanCategoryRequest) Reset() {
	*x = DeleteAdminPlanCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAdminPlanCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdminPlanCategoryRequest) ProtoMessage() {}

func (x *DeleteAdminPlanCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdminPlanCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteAdminPlanCategoryRequest) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAdminPlanCategoryRequest) GetPlanIds() []uint32 {
	if x != nil {
		return x.PlanIds
	}
	return nil
}

func (x *DeleteAdminPlanCategoryRequest) GetPlanCategoryIds() []uint32 {
	if x != nil {
		return x.PlanCategoryIds
	}
	return nil
}

type CreateAdminPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image      []byte `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	CategoryId uint32 `protobuf:"varint,3,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
}

func (x *CreateAdminPlanRequest) Reset() {
	*x = CreateAdminPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAdminPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdminPlanRequest) ProtoMessage() {}

func (x *CreateAdminPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdminPlanRequest.ProtoReflect.Descriptor instead.
func (*CreateAdminPlanRequest) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAdminPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAdminPlanRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *CreateAdminPlanRequest) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type CreateAdminPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *v1.Plan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *CreateAdminPlanResponse) Reset() {
	*x = CreateAdminPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAdminPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdminPlanResponse) ProtoMessage() {}

func (x *CreateAdminPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdminPlanResponse.ProtoReflect.Descriptor instead.
func (*CreateAdminPlanResponse) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAdminPlanResponse) GetPlan() *v1.Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type UpdateAdminPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image []byte `protobuf:"bytes,3,opt,name=image,proto3,oneof" json:"image,omitempty"`
}

func (x *UpdateAdminPlanRequest) Reset() {
	*x = UpdateAdminPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdminPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminPlanRequest) ProtoMessage() {}

func (x *UpdateAdminPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminPlanRequest.ProtoReflect.Descriptor instead.
func (*UpdateAdminPlanRequest) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAdminPlanRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAdminPlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAdminPlanRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type UpdateAdminPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *v1.Plan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *UpdateAdminPlanResponse) Reset() {
	*x = UpdateAdminPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdminPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminPlanResponse) ProtoMessage() {}

func (x *UpdateAdminPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminPlanResponse.ProtoReflect.Descriptor instead.
func (*UpdateAdminPlanResponse) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAdminPlanResponse) GetPlan() *v1.Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type OrderAdminPlanCategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanCategories []*OrderingPlanCategory `protobuf:"bytes,1,rep,name=planCategories,proto3" json:"planCategories,omitempty"`
}

func (x *OrderAdminPlanCategoriesRequest) Reset() {
	*x = OrderAdminPlanCategoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAdminPlanCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAdminPlanCategoriesRequest) ProtoMessage() {}

func (x *OrderAdminPlanCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAdminPlanCategoriesRequest.ProtoReflect.Descriptor instead.
func (*OrderAdminPlanCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{9}
}

func (x *OrderAdminPlanCategoriesRequest) GetPlanCategories() []*OrderingPlanCategory {
	if x != nil {
		return x.PlanCategories
	}
	return nil
}

type OrderingPlanCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlanIds []uint32 `protobuf:"varint,2,rep,packed,name=planIds,proto3" json:"planIds,omitempty"`
}

func (x *OrderingPlanCategory) Reset() {
	*x = OrderingPlanCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plan_v1_plan_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderingPlanCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderingPlanCategory) ProtoMessage() {}

func (x *OrderingPlanCategory) ProtoReflect() protoreflect.Message {
	mi := &file_plan_v1_plan_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderingPlanCategory.ProtoReflect.Descriptor instead.
func (*OrderingPlanCategory) Descriptor() ([]byte, []int) {
	return file_plan_v1_plan_proto_rawDescGZIP(), []int{10}
}

func (x *OrderingPlanCategory) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderingPlanCategory) GetPlanIds() []uint32 {
	if x != nil {
		return x.PlanIds
	}
	return nil
}

var File_plan_v1_plan_proto protoreflect.FileDescriptor

var file_plan_v1_plan_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5f,
	0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22,
	0x44, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0x62, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22,
	0x3f, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x6c,
	0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e,
	0x22, 0x61, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x22, 0x68, 0x0a, 0x1f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0e,
	0x70, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x40,
	0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x73,
	0x32, 0xa8, 0x05, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x27, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x18, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1f,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x5a, 0x3d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x73, 0x75, 0x63, 0x6f,
	0x69, 0x6e, 0x63, 0x2f, 0x65, 0x62, 0x69, 0x73, 0x75, 0x69, 0x72, 0x75, 0x2d, 0x66, 0x63, 0x2d,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6c,
	0x61, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x6c, 0x61, 0x6e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plan_v1_plan_proto_rawDescOnce sync.Once
	file_plan_v1_plan_proto_rawDescData = file_plan_v1_plan_proto_rawDesc
)

func file_plan_v1_plan_proto_rawDescGZIP() []byte {
	file_plan_v1_plan_proto_rawDescOnce.Do(func() {
		file_plan_v1_plan_proto_rawDescData = protoimpl.X.CompressGZIP(file_plan_v1_plan_proto_rawDescData)
	})
	return file_plan_v1_plan_proto_rawDescData
}

var file_plan_v1_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_plan_v1_plan_proto_goTypes = []interface{}{
	(*GetAdminPlanCategoriesResponse)(nil),  // 0: plan.v1.GetAdminPlanCategoriesResponse
	(*CreateAdminPlanCategoryRequest)(nil),  // 1: plan.v1.CreateAdminPlanCategoryRequest
	(*CreateAdminPlanCategoryResponse)(nil), // 2: plan.v1.CreateAdminPlanCategoryResponse
	(*UpdateAdminPlanCategoryRequest)(nil),  // 3: plan.v1.UpdateAdminPlanCategoryRequest
	(*DeleteAdminPlanCategoryRequest)(nil),  // 4: plan.v1.DeleteAdminPlanCategoryRequest
	(*CreateAdminPlanRequest)(nil),          // 5: plan.v1.CreateAdminPlanRequest
	(*CreateAdminPlanResponse)(nil),         // 6: plan.v1.CreateAdminPlanResponse
	(*UpdateAdminPlanRequest)(nil),          // 7: plan.v1.UpdateAdminPlanRequest
	(*UpdateAdminPlanResponse)(nil),         // 8: plan.v1.UpdateAdminPlanResponse
	(*OrderAdminPlanCategoriesRequest)(nil), // 9: plan.v1.OrderAdminPlanCategoriesRequest
	(*OrderingPlanCategory)(nil),            // 10: plan.v1.OrderingPlanCategory
	(*v1.PlanCategory)(nil),                 // 11: profile.v1.PlanCategory
	(*v1.Plan)(nil),                         // 12: profile.v1.Plan
	(*emptypb.Empty)(nil),                   // 13: google.protobuf.Empty
}
var file_plan_v1_plan_proto_depIdxs = []int32{
	11, // 0: plan.v1.GetAdminPlanCategoriesResponse.planCategories:type_name -> profile.v1.PlanCategory
	11, // 1: plan.v1.CreateAdminPlanCategoryResponse.planCategory:type_name -> profile.v1.PlanCategory
	12, // 2: plan.v1.CreateAdminPlanResponse.plan:type_name -> profile.v1.Plan
	12, // 3: plan.v1.UpdateAdminPlanResponse.plan:type_name -> profile.v1.Plan
	10, // 4: plan.v1.OrderAdminPlanCategoriesRequest.planCategories:type_name -> plan.v1.OrderingPlanCategory
	13, // 5: plan.v1.PlanService.GetAdminPlanCategories:input_type -> google.protobuf.Empty
	1,  // 6: plan.v1.PlanService.CreateAdminPlanCategory:input_type -> plan.v1.CreateAdminPlanCategoryRequest
	3,  // 7: plan.v1.PlanService.UpdateAdminPlanCategory:input_type -> plan.v1.UpdateAdminPlanCategoryRequest
	4,  // 8: plan.v1.PlanService.DeleteAdminPlanCategories:input_type -> plan.v1.DeleteAdminPlanCategoryRequest
	9,  // 9: plan.v1.PlanService.OrderAdminPlanCategories:input_type -> plan.v1.OrderAdminPlanCategoriesRequest
	5,  // 10: plan.v1.PlanService.CreateAdminPlan:input_type -> plan.v1.CreateAdminPlanRequest
	7,  // 11: plan.v1.PlanService.UpdateAdminPlan:input_type -> plan.v1.UpdateAdminPlanRequest
	0,  // 12: plan.v1.PlanService.GetAdminPlanCategories:output_type -> plan.v1.GetAdminPlanCategoriesResponse
	2,  // 13: plan.v1.PlanService.CreateAdminPlanCategory:output_type -> plan.v1.CreateAdminPlanCategoryResponse
	13, // 14: plan.v1.PlanService.UpdateAdminPlanCategory:output_type -> google.protobuf.Empty
	13, // 15: plan.v1.PlanService.DeleteAdminPlanCategories:output_type -> google.protobuf.Empty
	13, // 16: plan.v1.PlanService.OrderAdminPlanCategories:output_type -> google.protobuf.Empty
	6,  // 17: plan.v1.PlanService.CreateAdminPlan:output_type -> plan.v1.CreateAdminPlanResponse
	8,  // 18: plan.v1.PlanService.UpdateAdminPlan:output_type -> plan.v1.UpdateAdminPlanResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_plan_v1_plan_proto_init() }
func file_plan_v1_plan_proto_init() {
	if File_plan_v1_plan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plan_v1_plan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminPlanCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAdminPlanCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAdminPlanCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdminPlanCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAdminPlanCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAdminPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAdminPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdminPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdminPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAdminPlanCategoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plan_v1_plan_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderingPlanCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plan_v1_plan_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plan_v1_plan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plan_v1_plan_proto_goTypes,
		DependencyIndexes: file_plan_v1_plan_proto_depIdxs,
		MessageInfos:      file_plan_v1_plan_proto_msgTypes,
	}.Build()
	File_plan_v1_plan_proto = out.File
	file_plan_v1_plan_proto_rawDesc = nil
	file_plan_v1_plan_proto_goTypes = nil
	file_plan_v1_plan_proto_depIdxs = nil
}
