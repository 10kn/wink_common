// 参考
// https://zenn.dev/hsaki/books/golang-grpc-starting/viewer/proto
// https://dev.classmethod.jp/articles/golang-grpc-sample-project/
//

// protoのバージョンです。

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: card/v1/card.proto

// メッセージ型などの名前の衝突を避けるためにパッケージ名を指定します。

package cardv1

import (
	v1 "github.com/10kn/wink_common/server/profile/v1"
	v11 "github.com/10kn/wink_common/server/profile_image/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardActionStatus int32

const (
	CardActionStatus_CARD_ACTION_STATUS_UNKNOWN CardActionStatus = 0
	CardActionStatus_SKIP                       CardActionStatus = 1
	CardActionStatus_LIKE                       CardActionStatus = 2
	CardActionStatus_TREAT                      CardActionStatus = 3
	CardActionStatus_DRINK                      CardActionStatus = 4
	CardActionStatus_EAT                        CardActionStatus = 5
	CardActionStatus_BLOCK                      CardActionStatus = 6
	CardActionStatus_SUPER_WINK                 CardActionStatus = 7
)

// Enum value maps for CardActionStatus.
var (
	CardActionStatus_name = map[int32]string{
		0: "CARD_ACTION_STATUS_UNKNOWN",
		1: "SKIP",
		2: "LIKE",
		3: "TREAT",
		4: "DRINK",
		5: "EAT",
		6: "BLOCK",
		7: "SUPER_WINK",
	}
	CardActionStatus_value = map[string]int32{
		"CARD_ACTION_STATUS_UNKNOWN": 0,
		"SKIP":                       1,
		"LIKE":                       2,
		"TREAT":                      3,
		"DRINK":                      4,
		"EAT":                        5,
		"BLOCK":                      6,
		"SUPER_WINK":                 7,
	}
)

func (x CardActionStatus) Enum() *CardActionStatus {
	p := new(CardActionStatus)
	*p = x
	return p
}

func (x CardActionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardActionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_card_v1_card_proto_enumTypes[0].Descriptor()
}

func (CardActionStatus) Type() protoreflect.EnumType {
	return &file_card_v1_card_proto_enumTypes[0]
}

func (x CardActionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardActionStatus.Descriptor instead.
func (CardActionStatus) EnumDescriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{0}
}

type CardActionResult int32

const (
	CardActionResult_OTHER_RESULT                  CardActionResult = 0
	CardActionResult_CARD_NOT_FOUND_RESULT         CardActionResult = 1
	CardActionResult_OK_RESULT                     CardActionResult = 2
	CardActionResult_NOT_ENOUGH_COIN_TO_SUPER_WINK CardActionResult = 3
)

// Enum value maps for CardActionResult.
var (
	CardActionResult_name = map[int32]string{
		0: "OTHER_RESULT",
		1: "CARD_NOT_FOUND_RESULT",
		2: "OK_RESULT",
		3: "NOT_ENOUGH_COIN_TO_SUPER_WINK",
	}
	CardActionResult_value = map[string]int32{
		"OTHER_RESULT":                  0,
		"CARD_NOT_FOUND_RESULT":         1,
		"OK_RESULT":                     2,
		"NOT_ENOUGH_COIN_TO_SUPER_WINK": 3,
	}
)

func (x CardActionResult) Enum() *CardActionResult {
	p := new(CardActionResult)
	*p = x
	return p
}

func (x CardActionResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardActionResult) Descriptor() protoreflect.EnumDescriptor {
	return file_card_v1_card_proto_enumTypes[1].Descriptor()
}

func (CardActionResult) Type() protoreflect.EnumType {
	return &file_card_v1_card_proto_enumTypes[1]
}

func (x CardActionResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardActionResult.Descriptor instead.
func (CardActionResult) EnumDescriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{1}
}

type GetSuperWinkCoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount uint32 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetSuperWinkCoinResponse) Reset() {
	*x = GetSuperWinkCoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuperWinkCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuperWinkCoinResponse) ProtoMessage() {}

func (x *GetSuperWinkCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuperWinkCoinResponse.ProtoReflect.Descriptor instead.
func (*GetSuperWinkCoinResponse) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{0}
}

func (x *GetSuperWinkCoinResponse) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetSuperWinkUsedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Used  uint32 `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
}

func (x *GetSuperWinkUsedResponse) Reset() {
	*x = GetSuperWinkUsedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuperWinkUsedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuperWinkUsedResponse) ProtoMessage() {}

func (x *GetSuperWinkUsedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuperWinkUsedResponse.ProtoReflect.Descriptor instead.
func (*GetSuperWinkUsedResponse) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{1}
}

func (x *GetSuperWinkUsedResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSuperWinkUsedResponse) GetUsed() uint32 {
	if x != nil {
		return x.Used
	}
	return 0
}

type GetCardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *GetCardsResponse) Reset() {
	*x = GetCardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardsResponse) ProtoMessage() {}

func (x *GetCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardsResponse.ProtoReflect.Descriptor instead.
func (*GetCardsResponse) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{2}
}

func (x *GetCardsResponse) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type GetCardsForMeetupEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetupEventId string `protobuf:"bytes,1,opt,name=meetupEventId,proto3" json:"meetupEventId,omitempty"`
}

func (x *GetCardsForMeetupEventRequest) Reset() {
	*x = GetCardsForMeetupEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardsForMeetupEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardsForMeetupEventRequest) ProtoMessage() {}

func (x *GetCardsForMeetupEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardsForMeetupEventRequest.ProtoReflect.Descriptor instead.
func (*GetCardsForMeetupEventRequest) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{3}
}

func (x *GetCardsForMeetupEventRequest) GetMeetupEventId() string {
	if x != nil {
		return x.MeetupEventId
	}
	return ""
}

type GetCardsForMeetupEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *GetCardsForMeetupEventResponse) Reset() {
	*x = GetCardsForMeetupEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardsForMeetupEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardsForMeetupEventResponse) ProtoMessage() {}

func (x *GetCardsForMeetupEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardsForMeetupEventResponse.ProtoReflect.Descriptor instead.
func (*GetCardsForMeetupEventResponse) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{4}
}

func (x *GetCardsForMeetupEventResponse) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type AddCardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *AddCardsRequest) Reset() {
	*x = AddCardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCardsRequest) ProtoMessage() {}

func (x *AddCardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCardsRequest.ProtoReflect.Descriptor instead.
func (*AddCardsRequest) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{5}
}

func (x *AddCardsRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type CardActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId           string           `protobuf:"bytes,1,opt,name=cardId,proto3" json:"cardId,omitempty"`
	CardActionStatus CardActionStatus `protobuf:"varint,2,opt,name=cardActionStatus,proto3,enum=card.v1.CardActionStatus" json:"cardActionStatus,omitempty"`
	Message          string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CardActionRequest) Reset() {
	*x = CardActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardActionRequest) ProtoMessage() {}

func (x *CardActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardActionRequest.ProtoReflect.Descriptor instead.
func (*CardActionRequest) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{6}
}

func (x *CardActionRequest) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *CardActionRequest) GetCardActionStatus() CardActionStatus {
	if x != nil {
		return x.CardActionStatus
	}
	return CardActionStatus_CARD_ACTION_STATUS_UNKNOWN
}

func (x *CardActionRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CardActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardActionResult CardActionResult `protobuf:"varint,1,opt,name=cardActionResult,proto3,enum=card.v1.CardActionResult" json:"cardActionResult,omitempty"`
}

func (x *CardActionResponse) Reset() {
	*x = CardActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardActionResponse) ProtoMessage() {}

func (x *CardActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardActionResponse.ProtoReflect.Descriptor instead.
func (*CardActionResponse) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{7}
}

func (x *CardActionResponse) GetCardActionResult() CardActionResult {
	if x != nil {
		return x.CardActionResult
	}
	return CardActionResult_OTHER_RESULT
}

type GetCandidatesForMeetupEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetupEventId string `protobuf:"bytes,1,opt,name=meetupEventId,proto3" json:"meetupEventId,omitempty"`
}

func (x *GetCandidatesForMeetupEventRequest) Reset() {
	*x = GetCandidatesForMeetupEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandidatesForMeetupEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandidatesForMeetupEventRequest) ProtoMessage() {}

func (x *GetCandidatesForMeetupEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandidatesForMeetupEventRequest.ProtoReflect.Descriptor instead.
func (*GetCandidatesForMeetupEventRequest) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{8}
}

func (x *GetCandidatesForMeetupEventRequest) GetMeetupEventId() string {
	if x != nil {
		return x.MeetupEventId
	}
	return ""
}

type GetCandidatesForMeetupEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candidates []*Candidate `protobuf:"bytes,1,rep,name=candidates,proto3" json:"candidates,omitempty"`
}

func (x *GetCandidatesForMeetupEventResponse) Reset() {
	*x = GetCandidatesForMeetupEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandidatesForMeetupEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandidatesForMeetupEventResponse) ProtoMessage() {}

func (x *GetCandidatesForMeetupEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandidatesForMeetupEventResponse.ProtoReflect.Descriptor instead.
func (*GetCandidatesForMeetupEventResponse) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{9}
}

func (x *GetCandidatesForMeetupEventResponse) GetCandidates() []*Candidate {
	if x != nil {
		return x.Candidates
	}
	return nil
}

type GetCandidatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candidates []*Candidate `protobuf:"bytes,1,rep,name=candidates,proto3" json:"candidates,omitempty"`
}

func (x *GetCandidatesResponse) Reset() {
	*x = GetCandidatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandidatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandidatesResponse) ProtoMessage() {}

func (x *GetCandidatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandidatesResponse.ProtoReflect.Descriptor instead.
func (*GetCandidatesResponse) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{10}
}

func (x *GetCandidatesResponse) GetCandidates() []*Candidate {
	if x != nil {
		return x.Candidates
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Age              uint32                 `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Nickname         string                 `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	SelfIntroduction string                 `protobuf:"bytes,5,opt,name=selfIntroduction,proto3" json:"selfIntroduction,omitempty"`
	Job              *v1.Job                `protobuf:"bytes,6,opt,name=job,proto3" json:"job,omitempty"`
	ProfileImages    []*v11.ProfileImage    `protobuf:"bytes,7,rep,name=profileImages,proto3" json:"profileImages,omitempty"`
	LoggedinAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=loggedinAt,proto3,oneof" json:"loggedinAt,omitempty"`
	Latitude         *float64               `protobuf:"fixed64,9,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	Longitude        *float64               `protobuf:"fixed64,10,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	NewStatus        bool                   `protobuf:"varint,11,opt,name=newStatus,proto3" json:"newStatus,omitempty"`
	Plans            []*v1.PlanWithMatching `protobuf:"bytes,12,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{11}
}

func (x *Card) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Card) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Card) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Card) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Card) GetSelfIntroduction() string {
	if x != nil {
		return x.SelfIntroduction
	}
	return ""
}

func (x *Card) GetJob() *v1.Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *Card) GetProfileImages() []*v11.ProfileImage {
	if x != nil {
		return x.ProfileImages
	}
	return nil
}

func (x *Card) GetLoggedinAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LoggedinAt
	}
	return nil
}

func (x *Card) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *Card) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *Card) GetNewStatus() bool {
	if x != nil {
		return x.NewStatus
	}
	return false
}

func (x *Card) GetPlans() []*v1.PlanWithMatching {
	if x != nil {
		return x.Plans
	}
	return nil
}

type Candidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string            `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ProfileImage *v11.ProfileImage `protobuf:"bytes,2,opt,name=profileImage,proto3" json:"profileImage,omitempty"`
}

func (x *Candidate) Reset() {
	*x = Candidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_v1_card_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candidate) ProtoMessage() {}

func (x *Candidate) ProtoReflect() protoreflect.Message {
	mi := &file_card_v1_card_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candidate.ProtoReflect.Descriptor instead.
func (*Candidate) Descriptor() ([]byte, []int) {
	return file_card_v1_card_proto_rawDescGZIP(), []int{12}
}

func (x *Candidate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Candidate) GetProfileImage() *v11.ProfileImage {
	if x != nil {
		return x.ProfileImage
	}
	return nil
}

var File_card_v1_card_proto protoreflect.FileDescriptor

var file_card_v1_card_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x44, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x6b, 0x55,
	0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x64, 0x22, 0x37, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x45,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x65,
	0x74, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x65, 0x74, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x65, 0x74, 0x75, 0x70, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x2b, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x43, 0x61,
	0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x63, 0x61,
	0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x10, 0x63, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x10, 0x63, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4a, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x75, 0x70, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d,
	0x65, 0x65, 0x74, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x65, 0x74, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x59, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x63,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xf1, 0x03, 0x0a, 0x04, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x6c, 0x66,
	0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x43, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0a,
	0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x69, 0x6e, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a,
	0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x69, 0x6e, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x32, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x70, 0x6c,
	0x61, 0x6e, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x69, 0x6e,
	0x41, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x66, 0x0a,
	0x09, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x2a, 0x80, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x41,
	0x52, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x4b,
	0x49, 0x50, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4b, 0x45, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x54, 0x52, 0x45, 0x41, 0x54, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x52, 0x49,
	0x4e, 0x4b, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x41, 0x54, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x50, 0x45,
	0x52, 0x5f, 0x57, 0x49, 0x4e, 0x4b, 0x10, 0x07, 0x2a, 0x71, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x0c,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x15, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x4b, 0x5f,
	0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x5f, 0x43, 0x4f, 0x49, 0x4e, 0x5f, 0x54, 0x4f, 0x5f, 0x53,
	0x55, 0x50, 0x45, 0x52, 0x5f, 0x57, 0x49, 0x4e, 0x4b, 0x10, 0x03, 0x32, 0x9d, 0x05, 0x0a, 0x0b,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x19, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x75, 0x70, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x75, 0x70,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x46,
	0x6f, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x18, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x75, 0x70, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x65,
	0x74, 0x75, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x75, 0x70,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x69,
	0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x6b,
	0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x6b, 0x55, 0x73, 0x65, 0x64,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x6b, 0x55,
	0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x33, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31, 0x30, 0x6b, 0x6e, 0x2f, 0x77,
	0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x61, 0x72, 0x64, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_card_v1_card_proto_rawDescOnce sync.Once
	file_card_v1_card_proto_rawDescData = file_card_v1_card_proto_rawDesc
)

func file_card_v1_card_proto_rawDescGZIP() []byte {
	file_card_v1_card_proto_rawDescOnce.Do(func() {
		file_card_v1_card_proto_rawDescData = protoimpl.X.CompressGZIP(file_card_v1_card_proto_rawDescData)
	})
	return file_card_v1_card_proto_rawDescData
}

var file_card_v1_card_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_card_v1_card_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_card_v1_card_proto_goTypes = []interface{}{
	(CardActionStatus)(0),                       // 0: card.v1.CardActionStatus
	(CardActionResult)(0),                       // 1: card.v1.CardActionResult
	(*GetSuperWinkCoinResponse)(nil),            // 2: card.v1.GetSuperWinkCoinResponse
	(*GetSuperWinkUsedResponse)(nil),            // 3: card.v1.GetSuperWinkUsedResponse
	(*GetCardsResponse)(nil),                    // 4: card.v1.GetCardsResponse
	(*GetCardsForMeetupEventRequest)(nil),       // 5: card.v1.GetCardsForMeetupEventRequest
	(*GetCardsForMeetupEventResponse)(nil),      // 6: card.v1.GetCardsForMeetupEventResponse
	(*AddCardsRequest)(nil),                     // 7: card.v1.AddCardsRequest
	(*CardActionRequest)(nil),                   // 8: card.v1.CardActionRequest
	(*CardActionResponse)(nil),                  // 9: card.v1.CardActionResponse
	(*GetCandidatesForMeetupEventRequest)(nil),  // 10: card.v1.GetCandidatesForMeetupEventRequest
	(*GetCandidatesForMeetupEventResponse)(nil), // 11: card.v1.GetCandidatesForMeetupEventResponse
	(*GetCandidatesResponse)(nil),               // 12: card.v1.GetCandidatesResponse
	(*Card)(nil),                                // 13: card.v1.Card
	(*Candidate)(nil),                           // 14: card.v1.Candidate
	(*v1.Job)(nil),                              // 15: profile.v1.Job
	(*v11.ProfileImage)(nil),                    // 16: profileimage.v1.ProfileImage
	(*timestamppb.Timestamp)(nil),               // 17: google.protobuf.Timestamp
	(*v1.PlanWithMatching)(nil),                 // 18: profile.v1.PlanWithMatching
	(*emptypb.Empty)(nil),                       // 19: google.protobuf.Empty
}
var file_card_v1_card_proto_depIdxs = []int32{
	13, // 0: card.v1.GetCardsResponse.cards:type_name -> card.v1.Card
	13, // 1: card.v1.GetCardsForMeetupEventResponse.cards:type_name -> card.v1.Card
	0,  // 2: card.v1.CardActionRequest.cardActionStatus:type_name -> card.v1.CardActionStatus
	1,  // 3: card.v1.CardActionResponse.cardActionResult:type_name -> card.v1.CardActionResult
	14, // 4: card.v1.GetCandidatesForMeetupEventResponse.candidates:type_name -> card.v1.Candidate
	14, // 5: card.v1.GetCandidatesResponse.candidates:type_name -> card.v1.Candidate
	15, // 6: card.v1.Card.job:type_name -> profile.v1.Job
	16, // 7: card.v1.Card.profileImages:type_name -> profileimage.v1.ProfileImage
	17, // 8: card.v1.Card.loggedinAt:type_name -> google.protobuf.Timestamp
	18, // 9: card.v1.Card.plans:type_name -> profile.v1.PlanWithMatching
	16, // 10: card.v1.Candidate.profileImage:type_name -> profileimage.v1.ProfileImage
	19, // 11: card.v1.CardService.GetCards:input_type -> google.protobuf.Empty
	5,  // 12: card.v1.CardService.GetCardsForMeetupEvent:input_type -> card.v1.GetCardsForMeetupEventRequest
	7,  // 13: card.v1.CardService.AddCards:input_type -> card.v1.AddCardsRequest
	8,  // 14: card.v1.CardService.CardAction:input_type -> card.v1.CardActionRequest
	19, // 15: card.v1.CardService.GetCandidates:input_type -> google.protobuf.Empty
	10, // 16: card.v1.CardService.GetCandidatesForMeetupEvent:input_type -> card.v1.GetCandidatesForMeetupEventRequest
	19, // 17: card.v1.CardService.GetSuperWinkCoin:input_type -> google.protobuf.Empty
	19, // 18: card.v1.CardService.GetSuperWinkUsed:input_type -> google.protobuf.Empty
	4,  // 19: card.v1.CardService.GetCards:output_type -> card.v1.GetCardsResponse
	6,  // 20: card.v1.CardService.GetCardsForMeetupEvent:output_type -> card.v1.GetCardsForMeetupEventResponse
	19, // 21: card.v1.CardService.AddCards:output_type -> google.protobuf.Empty
	9,  // 22: card.v1.CardService.CardAction:output_type -> card.v1.CardActionResponse
	12, // 23: card.v1.CardService.GetCandidates:output_type -> card.v1.GetCandidatesResponse
	11, // 24: card.v1.CardService.GetCandidatesForMeetupEvent:output_type -> card.v1.GetCandidatesForMeetupEventResponse
	2,  // 25: card.v1.CardService.GetSuperWinkCoin:output_type -> card.v1.GetSuperWinkCoinResponse
	3,  // 26: card.v1.CardService.GetSuperWinkUsed:output_type -> card.v1.GetSuperWinkUsedResponse
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_card_v1_card_proto_init() }
func file_card_v1_card_proto_init() {
	if File_card_v1_card_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_card_v1_card_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuperWinkCoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuperWinkUsedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardsForMeetupEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardsForMeetupEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandidatesForMeetupEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandidatesForMeetupEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandidatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_v1_card_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_card_v1_card_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_card_v1_card_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_card_v1_card_proto_goTypes,
		DependencyIndexes: file_card_v1_card_proto_depIdxs,
		EnumInfos:         file_card_v1_card_proto_enumTypes,
		MessageInfos:      file_card_v1_card_proto_msgTypes,
	}.Build()
	File_card_v1_card_proto = out.File
	file_card_v1_card_proto_rawDesc = nil
	file_card_v1_card_proto_goTypes = nil
	file_card_v1_card_proto_depIdxs = nil
}
