// 参考
// https://zenn.dev/hsaki/books/golang-grpc-starting/viewer/proto
// https://dev.classmethod.jp/articles/golang-grpc-sample-project/
//

// protoのバージョンです。
syntax = "proto3";

// メッセージ型などの名前の衝突を避けるためにパッケージ名を指定します。
package message.v1;

// コードが自動生成されるディレクトリを指定しています。
option go_package = "github.com/gisucoinc/ebisuiru-fc-common/server/message/v1;messagev1";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "common/v1/paging.proto";

service MessageService {
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {}
  rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse) {}
  rpc GetRooms(google.protobuf.Empty) returns (GetRoomsResponse) {}
  rpc GetRoom(GetRoomRequest) returns (GetRoomResponse) {}
  rpc PinRoom(PinRoomRequest) returns (google.protobuf.Empty) {}
  rpc UnpinRoom(UnpinRoomRequest) returns (google.protobuf.Empty) {}
  rpc HideRoom(HideRoomRequest) returns (google.protobuf.Empty) {}
  rpc SearchAdminMessages(SearchAdminMessagesRequest)
      returns (SearchAdminMessagesResponse);
  rpc DeleteAdminMessages(DeleteAdminMessagesRequest)
      returns (google.protobuf.Empty);
  rpc GetSuperWinkMessage(GetSuperWinkMessageRequest) returns (GetSuperWinkMessageResponse) {}
  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse);
}

message SendMessageRequest {
  string roomId = 1;
  string text   = 2;
}

message SendMessageResponse {
  SendMessageResult sendMessageResult = 1;
}

message GetMessagesRequest {
  string roomId = 1;
}

message GetMessagesResponse {
  repeated Message messages = 1;
}

message GetRoomsResponse {
  repeated Room rooms = 1;
}

message GetRoomRequest {
  string roomId = 1;
}

message GetRoomResponse {
  Room room = 1;
}

message PinRoomRequest {
  string roomId = 1;
}

message UnpinRoomRequest {
  string roomId = 1;
}

message HideRoomRequest {
  string roomId = 1;
}

message SearchAdminMessagesRequest {
  optional uint32           limit    = 1;
  optional uint32           page     = 2;
  google.protobuf.Timestamp sentAt   = 3;
  optional string           userId1  = 4;
  optional string           userId2  = 5;
  optional bool             firstFlg = 6;
}

message SearchAdminMessagesResponse {
  repeated SearchAdminMessage data   = 1;
  common.v1.Paging            paging = 2;
}

message SearchAdminMessage {
  string                    id           = 1;
  string                    senderId     = 2;
  string                    senderName   = 3;
  string                    receiverId   = 4;
  string                    receiverName = 5;
  string                    text         = 6;
  google.protobuf.Timestamp sentAt       = 7;
  bool                      deleted      = 8;
}

message DeleteAdminMessagesRequest {
  string id      = 1;
  bool   deleted = 2;
}

message Room {
  string                             id                      = 1;
  string                             partnerId               = 2;
  string                             partnerNickName         = 3;
  uint64                             partnerAge              = 4;
  string                             partnerProfileImagePath = 5;
  optional string                    lastMessageText         = 6;
  optional google.protobuf.Timestamp lastMessageSentAt       = 7;
  optional string                    lastSenderId            = 8;
  bool                               newStatus               = 9;
  uint64                             unreadCount             = 10;
  bool                               isPinning               = 11;
  bool                               isPinningBySuperWink    = 12;
}

message Message {
  string                    id       = 1;
  string                    senderId = 2;
  string                    roomId   = 3;
  string                    text     = 4;
  google.protobuf.Timestamp sentAt   = 5;
}

enum SendMessageResult {
  OTHER_RESULT = 0;
  OVER_WINK_FREE_LIMIT_RESULT = 1;
  OK_RESULT = 2;
}

message GetSuperWinkMessageRequest {
  string roomId = 1;
}

message GetSuperWinkMessageResponse {
  string senderNickName = 1;
  string message = 2;
  string senderId = 3;
}

message CreateRoomRequest {
  string partnerId = 1;
}

message CreateRoomResponse {
  string roomId = 1;
}
